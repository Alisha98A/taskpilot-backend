{"version":3,"sources":["api/axiosDefaults.js","contexts/CurrentUserContext.js","hooks/useClickOutsideToggle.js","components/NavBar.js","components/PrivateRoute.js","pages/home/WelcomePage.js","pages/home/Dashboard.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","components/tasks/TaskCard.js","components/tasks/CompletedTaskCard.js","components/tasks/PaginationControls.js","components/tasks/TaskCategoryFilter.js","pages/tasks/TaskList.js","hooks/useTasks.js","pages/tasks/TaskForm.js","hooks/useTaskForm.js","components/NoteCardForTask.js","pages/tasks/TaskDetail.js","pages/tasks/TaskCreate.js","components/DeleteConfirmModal.js","utils/dateUtils.js","pages/tasks/TaskEdit.js","hooks/useNotesList.js","components/NoteCard.js","pages/notes/NoteList.js","pages/notes/NoteDetail.js","pages/notes/NoteForm.js","hooks/useNoteForm.js","pages/notes/NoteCreate.js","pages/notes/NoteEdit.js","pages/notes/NoteDelete.js","pages/contact/ContactForm.js","App.js","reportWebVitals.js","index.js","styles/NavBar.module.css","styles/TaskList.module.css","styles/SignInUpForm.module.css","styles/Dashboard.module.css","styles/NoteList.module.css","App.module.css","styles/Button.module.css","styles/ContactForm.module.css","styles/TaskDetail.module.css","styles/TaskCreate.module.css","styles/NoteDetail.module.css"],"names":["BASE_URL","axiosReq","axios","create","baseURL","headers","withCredentials","axiosRes","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","currentUser","setCurrentUser","history","useHistory","useEffect","handleMount","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosReq$get","data","wrap","_context","prev","next","get","sent","t0","stop","apply","arguments","requestInterceptor","interceptors","request","use","config","error","Promise","reject","responseInterceptor","response","_error$response","status","push","eject","_jsx","Provider","value","useClickOutsideToggle","expanded","setExpanded","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","NavBar","_useClickOutsideToggl","handleSignOut","post","console","log","newTaskIcon","_jsxs","NavLink","to","className","isActive","concat","styles","navLink","Active","loggedInLinks","_Fragment","_ref3","_ref4","onClick","role","loggedOutLinks","_ref5","_ref6","Navbar","expand","fixed","Container","Brand","brand","src","alt","height","brandText","Toggle","Collapse","id","Nav","_ref7","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","_objectSpread","render","props","Redirect","WelcomePage","fluid","Row","Col","md","lg","Card","Body","Title","as","Subtitle","BsClipboardCheck","size","BsCalendarCheck","BsCheckCircle","Text","Link","Button","variant","Dashboard","tasksCount","setTasksCount","_useState3","_useState4","notesCount","setNotesCount","fetchCounts","_tasksRes$data$result","_tasksRes$data$result2","_notesRes$data$result","_notesRes$data$result2","tasksRes","notesRes","Array","isArray","length","results","dashboardWrapper","dashboardHeader","title","subtitle","statsSection","statCard","icon","FaClipboardList","FaRegStickyNote","FaEnvelope","actionsPanel","buttonGroup","primaryBtn","secondaryBtn","SignUpForm","_errors$username","_errors$email","_errors$password","_errors$password2","_errors$non_field_err","username","email","password1","password2","signUpData","setSignUpData","errors","setErrors","handleChange","_defineProperty","name","handleSubmit","_err$response","preventDefault","_x","appStyles","Content","Header","style","fontSize","Form","onSubmit","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","msg","idx","Alert","non_field_errors","btnStyles","Wide","Bright","SignUpCol","Image","FillerImage","SignInForm","password","signInData","setSignInData","_useState5","_useState6","successMessage","setSuccessMessage","_yield$axiosReq$post","user","setTimeout","SignInCol","TaskCard","task","updateState","deleteTask","taskCard","state","done","priority","taskCardBody","taskState","e","Object","entries","open","in_progress","label","taskTitle","description","category","due_date","Badge","bg","taskCardFooter","CompletedTaskCard","completedCard","completedCardTitle","completedCardFooter","PaginationControls","total","currentPage","setCurrentPage","tasksPerPage","totalPages","Math","ceil","ButtonGroup","_toConsumableArray","keys","num","TaskCategoryFilter","categories","selectedCategory","setSelectedCategory","cat","charAt","toUpperCase","slice","TaskList","_useTasks","tasks","setTasks","setCategories","fetchTasks","res","taskData","Set","t","_callee2","_context2","window","confirm","delete","filter","updateTaskState","_callee3","newState","isoDueDate","_context3","Date","toISOString","put","_x2","_x3","filterAndSortTasks","searchTerm","sortBy","toLowerCase","includes","sort","a","b","priorityRank","high","medium","low","groupTasks","taskList","today","endOfWeek","setDate","getDate","todayTasks","weekTasks","laterTasks","forEach","due","toDateString","useTasks","setSearchTerm","setSortBy","_useState7","_useState8","filteredTasks","completedTasks","_groupTasks","paginate","items","start","progress","round","progressWrapper","ProgressBar","now","Dropdown","onSelect","val","Menu","Item","eventKey","color","sectionTitle","completedSection","OPTIONS","PRIORITIES","STATES","CATEGORIES","DropdownSelector","_options$find","options","selected","_ref$disabled","disabled","undefined","find","o","TaskForm","formData","handleSelect","getMinDate","isEditMode","_ref3$readOnly","readOnly","required","rows","min","split","useTaskForm","taskId","notes","setFormData","payload","alert","_ref$target","field","NoteCardForTask","note","noteCard","body","timestamp","date_added","created_at","toLocaleString","TaskDetail","useParams","_useTaskForm","setNotes","setError","fetchTask","useCallback","handleDelete","taskFormWrapper","notesSection","TaskCreate","_useTaskCreateForm","_React$useState","React","_React$useState2","useTaskCreateForm","taskCreateWrapper","DeleteConfirmModal","show","onHide","onConfirm","Modal","centered","closeButton","Footer","formatDateForInput","dateString","date","isNaN","getTime","year","getFullYear","month","getMonth","toString","padStart","day","TaskEdit","Number","notesList","setNotesList","editingNoteId","setEditingNoteId","editingNoteBody","setEditingNoteBody","showModal","setShowModal","_useState9","_useState10","noteToDelete","setNoteToDelete","_useState11","_useState12","deleteError","setDeleteError","handleAddNote","noteContent","trim","abrupt","confirmDeleteNote","handleSaveNote","_callee4","_context4","ListGroup","noteId","currentBody","useNotesList","loading","setLoading","isMounted","fetchNotes","NoteCard","tabIndex","noteTitle","noteLink","substring","taskLink","NoteList","_useNotesList","Spinner","animation","noteListContainer","headerRow","pageTitle","addNoteButton","noNotesText","xs","sm","NoteDetail","setNote","fetchNote","finish","noteDetailWrapper","date_updated","NoteForm","_ref$initialBody","initialBody","_ref$initialTask","initialTask","_ref$tasks","_ref$submitLabel","submitLabel","setBody","selectedTask","setSelectedTask","useNoteForm","_yield$axiosReq$get2","fetch","timer","clearTimeout","NoteCreate","_useNoteForm","handleCreate","submit","form","NoteEdit","NoteDelete","setTaskId","goBack","ContactForm","subject","message","success","setSuccess","contactContainer","contactTitle","errorMessage","formGroup","submitButton","App","isWelcomePage","useLocation","pathname","classList","toggle","Main","Switch","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","Router","getElementById","module","exports"],"mappings":"iSAEMA,EAAW,uDAEJC,EAAWC,IAAMC,OAAO,CACnCC,QAASJ,EACTK,QAAS,CACP,eAAgB,oBAElBC,iBAAiB,IAGNC,EAAWL,IAAMC,OAAO,CACnCC,QAASJ,EACTK,QAAS,CACP,eAAgB,uBAElBC,iBAAiB,I,OCZNE,EAAqBC,0BACrBC,EAAwBD,0BAGxBE,EAAiB,WAAH,OAASC,qBAAWJ,EAAoB,EACtDK,EAAoB,WAAH,OAASD,qBAAWF,EAAuB,EAE5DI,EAAsB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACpCC,EAAsCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,EAAUC,cA0ChB,OAvCAC,qBAAU,WACR,IAAMC,EAAW,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOpC,EAASqC,IAAI,2BAA2B,KAAD,EAAAN,EAAAG,EAAAI,KAAtDN,EAAID,EAAJC,KACRX,EAAeW,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGrBb,EAAe,MAAM,yBAAAa,EAAAM,OAAA,GAAAV,EAAA,kBAExB,kBARgB,OAAAJ,EAAAe,MAAA,KAAAC,UAAA,KAUjBjB,GACF,GAAG,IAGHD,qBAAU,WACR,IAAMmB,EAAqB3C,EAAS4C,aAAaC,QAAQC,KACvD,SAACC,GAAM,OAAKA,CAAM,IAClB,SAACC,GAAK,OAAKC,QAAQC,OAAOF,EAAM,IAG5BG,EAAsB7C,EAASsC,aAAaQ,SAASN,KACzD,SAACM,GAAQ,OAAKA,CAAQ,IACtB,SAACJ,GAAW,IAADK,EAKT,OAJ+B,OAAb,QAAdA,EAAAL,EAAMI,gBAAQ,IAAAC,OAAA,EAAdA,EAAgBC,UAClBjC,EAAe,MACfC,EAAQiC,KAAK,YAERN,QAAQC,OAAOF,EACxB,IAIF,OAAO,WACLhD,EAAS4C,aAAaC,QAAQW,MAAMb,GACpCrC,EAASsC,aAAaQ,SAASI,MAAML,EACvC,CACF,GAAG,CAAC7B,IAGFmC,cAAClD,EAAmBmD,SAAQ,CAACC,MAAOvC,EAAYL,SAC9C0C,cAAChD,EAAsBiD,SAAQ,CAACC,MAAOtC,EAAeN,SACnDA,KAIT,EC5Be6C,EA7Be,WAE5B,IAAA5C,EAAgCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxC6C,EAAQ3C,EAAA,GAAE4C,EAAW5C,EAAA,GAGtB6C,EAAMC,iBAAO,MAqBnB,OAnBAxC,qBAAU,WAER,IAAMyC,EAAqB,SAACC,GAEtBH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAMG,SAC7CP,GAAY,EAEhB,EAMA,OAHAQ,SAASC,iBAAiB,UAAWN,GAG9B,WACLK,SAASE,oBAAoB,UAAWP,EAC1C,CACF,GAAG,CAACF,IAGG,CAAEF,WAAUC,cAAaC,MAClC,ECqFeU,EA9GA,WACb,IAAMrD,EAAcV,IACdW,EAAiBT,IACvB8D,EAAuCd,IAA/BC,EAAQa,EAARb,SAAUC,EAAWY,EAAXZ,YAAaC,EAAGW,EAAHX,IACzBzC,EAAUC,cAEVoD,EAAa,eAAA7D,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEZnC,IAAM2E,KAAK,6BAA6B,KAAD,EAC7CvD,EAAe,MACfC,EAAQiC,KAAK,WAAWrB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAExB2C,QAAQC,IAAG5C,EAAAK,IAAM,yBAAAL,EAAAM,OAAA,GAAAV,EAAA,kBAEpB,kBARkB,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAUbqC,EAAc3D,GAClB4D,eAACC,IAAO,CACNC,GAAG,gBACHC,UAAW,SAAAzD,GAAW,OAAAA,EAAR0D,SACJ,GAAAC,OAAMC,IAAOC,QAAO,KAAAF,OAAIC,IAAOE,QAAWF,IAAOC,OAAO,EACjExE,SAAA,CAED0C,cAAA,KAAG0B,UAAU,uBAAyB,eAIpCM,EACJT,eAAAU,WAAA,CAAA3E,SAAA,CACEiE,eAACC,IAAO,CACNC,GAAG,SACHC,UAAW,SAAAQ,GAAW,OAAAA,EAARP,SACJ,GAAAC,OAAMC,IAAOC,QAAO,KAAAF,OAAIC,IAAOE,QAAWF,IAAOC,OAAO,EACjExE,SAAA,CAED0C,cAAA,KAAG0B,UAAU,iBAAmB,eAElCH,eAACC,IAAO,CACNC,GAAG,SACHC,UAAW,SAAAS,GAAW,OAAAA,EAARR,SACJ,GAAAC,OAAMC,IAAOC,QAAO,KAAAF,OAAIC,IAAOE,QAAWF,IAAOC,OAAO,EACjExE,SAAA,CAED0C,cAAA,KAAG0B,UAAU,uBAAyB,YAExCH,eAAA,QAAMa,QAASlB,EAAeQ,UAAWG,IAAOC,QAASO,KAAK,SAAQ/E,SAAA,CACpE0C,cAAA,KAAG0B,UAAU,wBAA0B,kBAKvCY,EACJf,eAAAU,WAAA,CAAA3E,SAAA,CACEiE,eAACC,IAAO,CACNC,GAAG,UACHC,UAAW,SAAAa,GAAW,OAAAA,EAARZ,SACJ,GAAAC,OAAMC,IAAOC,QAAO,KAAAF,OAAIC,IAAOE,QAAWF,IAAOC,OAAO,EACjExE,SAAA,CAED0C,cAAA,KAAG0B,UAAU,uBAAyB,cAExCH,eAACC,IAAO,CACNC,GAAG,UACHC,UAAW,SAAAc,GAAW,OAAAA,EAARb,SACJ,GAAAC,OAAMC,IAAOC,QAAO,KAAAF,OAAIC,IAAOE,QAAWF,IAAOC,OAAO,EACjExE,SAAA,CAED0C,cAAA,KAAG0B,UAAU,qBAAuB,iBAK1C,OACE1B,cAACyC,IAAM,CACLrC,SAAUA,EACVsB,UAAWG,IAAOb,OAClB0B,OAAO,KACPC,MAAM,MAAKrF,SAEXiE,eAACqB,IAAS,CAAAtF,SAAA,CACR0C,cAACwB,IAAO,CAACC,GAAG,IAAIC,UAAWG,IAAOC,QAAQxE,SACxCiE,eAACkB,IAAOI,MAAK,CAACnB,UAAWG,IAAOiB,MAAMxF,SAAA,CACpC0C,cAAA,OAAK+C,IAAI,uBAAuBC,IAAI,OAAOC,OAAO,OAClDjD,cAAA,QAAM0B,UAAWG,IAAOqB,UAAU5F,SAAC,mBAGtCgE,EACDtB,cAACyC,IAAOU,OAAM,CACZ7C,IAAKA,EACL8B,QAAS,kBAAM/B,GAAaD,EAAS,EACrC,gBAAc,qBAEhBJ,cAACyC,IAAOW,SAAQ,CAACC,GAAG,mBAAkB/F,SACpCiE,eAAC+B,IAAG,CAAC5B,UAAU,oBAAmBpE,SAAA,CAChCiE,eAACC,IAAO,CACNC,GAAG,IACHC,UAAW,SAAA6B,GAAW,OAAAA,EAAR5B,SACJ,GAAAC,OAAMC,IAAOC,QAAO,KAAAF,OAAIC,IAAOE,QAAWF,IAAOC,OAAO,EACjExE,SAAA,CAED0C,cAAA,KAAG0B,UAAU,gBAAkB,WAEhC/D,EAAcqE,EAAgBM,WAM3C,E,gCCnGekB,MAbf,SAAqBnG,GAAqC,IAAvBoG,EAASpG,EAApBqG,UAAyBC,EAAIC,YAAAvG,EAAAwG,GAC7ClG,EAAcV,IAEpB,OACE+C,cAAC8D,IAAKC,wBAAA,GACAJ,GAAI,IACRK,OAAQ,SAACC,GAAK,OACZtG,EAAcqC,cAACyD,EAASM,YAAA,GAAKE,IAAYjE,cAACkE,IAAQ,CAACzC,GAAG,WAAY,IAI1E,E,iDCwDe0C,MA3Df,WACE,OACEnE,cAAA,OAAK0B,UAAU,eAAcpE,SAE3B0C,cAAC4C,IAAS,CAAClB,UAAU,oBAAoB0C,MAAM,KAAI9G,SACjD0C,cAACqE,IAAG,CAAC3C,UAAU,yBAAwBpE,SAErC0C,cAACsE,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAElH,SAEjB0C,cAACyE,IAAI,CAAC/C,UAAU,8CAA6CpE,SAC3DiE,eAACkD,IAAKC,KAAI,CAAApH,SAAA,CAERiE,eAACkD,IAAKE,MAAK,CAACC,GAAG,KAAKlD,UAAU,UAASpE,SAAA,CAAC,cAC3B0C,cAAA,QAAM0B,UAAU,eAAcpE,SAAC,iBAI5C0C,cAACyE,IAAKI,SAAQ,CAACnD,UAAU,kBAAiBpE,SAAC,4CAK3CiE,eAAA,OAAKG,UAAU,yCAAwCpE,SAAA,CACrD0C,cAAC8E,IAAgB,CAACC,KAAM,GAAIrD,UAAU,sBACtC1B,cAACgF,IAAe,CAACD,KAAM,GAAIrD,UAAU,sBACrC1B,cAACiF,IAAa,CAACF,KAAM,GAAIrD,UAAU,oBAIrCH,eAACkD,IAAKS,KAAI,CAACxD,UAAU,OAAMpE,SAAA,CAAC,sCACU,IACpC0C,cAAA,QAAM0B,UAAU,uBAAsBpE,SAAC,cAAgB,6MAOzDiE,eAAA,OAAKG,UAAU,eAAcpE,SAAA,CAC3B0C,cAACmF,IAAI,CAAC1D,GAAG,UAASnE,SAChB0C,cAACoF,IAAM,CAACC,QAAQ,UAAUN,KAAK,KAAIzH,SAAC,kBAItC0C,cAACmF,IAAI,CAAC1D,GAAG,UAASnE,SAChB0C,cAACoF,IAAM,CAACC,QAAQ,kBAAkBN,KAAK,KAAIzH,SAAC,6BAYhE,E,yBC6BegI,MApFf,WACE,IAAA/H,EAAoCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAxCgI,EAAU9H,EAAA,GAAE+H,EAAa/H,EAAA,GAChCgI,EAAoCjI,mBAAS,GAAEkI,EAAAhI,YAAA+H,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAoBhC,OAlBA3H,qBAAU,WACR,IAAM8H,EAAW,eAAAxI,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAyH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhI,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOpC,EAASqC,IAAI,eAAe,KAAD,EAGlD,OAHMsH,EAAQzH,EAAAI,KACd2G,EAAcY,MAAMC,QAAQH,EAAS3H,MAAQ2H,EAAS3H,KAAK+H,OAAuC,QAAjCR,EAAyB,QAAzBC,EAAIG,EAAS3H,KAAKgI,eAAO,IAAAR,OAAA,EAArBA,EAAuBO,cAAM,IAAAR,IAAI,GAEtGrH,EAAAE,KAAA,EACuBpC,EAASqC,IAAI,eAAe,KAAD,EAA5CuH,EAAQ1H,EAAAI,KACd+G,EAAcQ,MAAMC,QAAQF,EAAS5H,MAAQ4H,EAAS5H,KAAK+H,OAAuC,QAAjCN,EAAyB,QAAzBC,EAAIE,EAAS5H,KAAKgI,eAAO,IAAAN,OAAA,EAArBA,EAAuBK,cAAM,IAAAN,IAAI,GAAIvH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAE1G2C,QAAQ7B,MAAM,kCAAiCd,EAAAK,IAAS,yBAAAL,EAAAM,OAAA,GAAAV,EAAA,mBAE3D,kBAZgB,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAcjB4G,GACF,GAAG,IAGDtE,eAAA,QAAMG,UAAWG,IAAO2E,iBAAiBlJ,SAAA,CAEvCiE,eAAA,UAAQG,UAAWG,IAAO4E,gBAAgBnJ,SAAA,CACxC0C,cAAA,MAAI0B,UAAWG,IAAO6E,MAAMpJ,SAAC,uBAC7B0C,cAAA,KAAG0B,UAAWG,IAAO8E,SAASrJ,SAAC,6EAMjCiE,eAAA,WAASG,UAAWG,IAAO+E,aAAatJ,SAAA,CAEtCiE,eAAC4D,IAAI,CAAC1D,GAAG,SAASC,UAAWG,IAAOgF,SAASvJ,SAAA,CAC3C0C,cAAA,OAAK0B,UAAWG,IAAOiF,KAAKxJ,SAC1B0C,cAAC+G,IAAe,CAAChC,KAAM,OAEzBxD,eAAA,OAAAjE,SAAA,CACE0C,cAAA,MAAA1C,SAAI,UACJiE,eAAA,KAAAjE,SAAA,CAAIiI,EAAW,QAAqB,IAAfA,EAAmB,IAAM,YAKlDhE,eAAC4D,IAAI,CAAC1D,GAAG,SAASC,UAAWG,IAAOgF,SAASvJ,SAAA,CAC3C0C,cAAA,OAAK0B,UAAWG,IAAOiF,KAAKxJ,SAC1B0C,cAACgH,IAAe,CAACjC,KAAM,OAEzBxD,eAAA,OAAAjE,SAAA,CACE0C,cAAA,MAAA1C,SAAI,UACJiE,eAAA,KAAAjE,SAAA,CAAIqI,EAAW,QAAqB,IAAfA,EAAmB,IAAM,YAKlDpE,eAAC4D,IAAI,CAAC1D,GAAG,WAAWC,UAAWG,IAAOgF,SAASvJ,SAAA,CAC7C0C,cAAA,OAAK0B,UAAWG,IAAOiF,KAAKxJ,SAC1B0C,cAACiH,IAAU,CAAClC,KAAM,OAEpBxD,eAAA,OAAAjE,SAAA,CACE0C,cAAA,MAAA1C,SAAI,eACJ0C,cAAA,KAAA1C,SAAG,kCAMTiE,eAAA,WAASG,UAAWG,IAAOqF,aAAa5J,SAAA,CACtC0C,cAAA,MAAA1C,SAAI,kBACJiE,eAAA,OAAKG,UAAWG,IAAOsF,YAAY7J,SAAA,CACjC0C,cAACmF,IAAI,CAAC1D,GAAG,gBAAgBC,UAAWG,IAAOuF,WAAW9J,SAAC,kBAGvD0C,cAACmF,IAAI,CAAC1D,GAAG,gBAAgBC,UAAWG,IAAOwF,aAAa/J,SAAC,uBAOnE,E,qECyEegK,GAtJI,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAEvBpK,EAAoCC,mBAAS,CAC3CoK,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,KACXtK,EAAAC,YAAAH,EAAA,GALKyK,EAAUvK,EAAA,GAAEwK,EAAaxK,EAAA,GAQxBmK,EAA0CI,EAA1CJ,SAAUC,EAAgCG,EAAhCH,MAAOC,EAAyBE,EAAzBF,UAAWC,EAAcC,EAAdD,UAGpCtC,EAA4BjI,mBAAS,CAAC,GAAEkI,EAAAhI,YAAA+H,EAAA,GAAjCyC,EAAMxC,EAAA,GAAEyC,EAASzC,EAAA,GAGlB7H,EAAUC,cAGVsK,EAAe,SAAC3H,GACpBwH,EAAalE,wBAAC,CAAC,EACViE,GAAU,GAAAK,YAAA,GACZ5H,EAAMG,OAAO0H,KAAO7H,EAAMG,OAAOV,QAEtC,EAGMqI,EAAY,eAAAlL,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,EAAOoC,GAAK,IAAA+H,EAAA,OAAArK,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAvB8B,EAAMgI,iBAAiBhK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEfpC,EAAS4E,KAAK,kCAAmC6G,GAAY,KAAD,EAClEnK,EAAQiC,KAAK,WAAWrB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGxB0J,GAAsB,QAAZK,EAAA/J,EAAAK,GAAIa,gBAAQ,IAAA6I,OAAA,EAAZA,EAAcjK,OAAQ,CAAC,GAAG,yBAAAE,EAAAM,OAAA,GAAAV,EAAA,kBAEvC,gBATiBqK,GAAA,OAAArL,EAAA2B,MAAA,KAAAC,UAAA,KAWlB,OACEsC,eAAC8C,IAAG,CAAC3C,UAAWG,IAAOwC,IAAI/G,SAAA,CACzBiE,eAAC+C,IAAG,CAAC5C,UAAU,4BAA4B6C,GAAI,EAAEjH,SAAA,CAC/CiE,eAACqB,IAAS,CAAClB,UAAS,GAAAE,OAAK+G,IAAUC,QAAO,QAAOtL,SAAA,CAC/C0C,cAAA,MAAI0B,UAAS,GAAAE,OAAKC,IAAOgH,OAAM,+BAA8BvL,SAAC,kCAG9D0C,cAAA,KAAG0B,UAAU,8BAA8BoH,MAAO,CAAEC,SAAU,WAAYzL,SAAC,6CAI3EiE,eAACyH,IAAI,CAACC,SAAUV,EAAajL,SAAA,CAE3BiE,eAACyH,IAAKE,MAAK,CAACC,UAAU,WAAU7L,SAAA,CAC9B0C,cAACgJ,IAAKI,MAAK,CAAC1H,UAAU,UAASpE,SAAC,aAChC0C,cAACgJ,IAAKK,QAAO,CACX3H,UAAWG,IAAOyH,MAClBC,KAAK,OACLC,YAAY,oBACZlB,KAAK,WACLpI,MAAO0H,EACP6B,SAAUrB,OAGE,QADHb,EACZW,EAAON,gBAAQ,IAAAL,OAAA,EAAfA,EAAiBmC,KAAI,SAACC,EAAKC,GAAG,OAC7B5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAAEqM,GAAxBC,EAAoC,IAIlDrI,eAACyH,IAAKE,MAAK,CAACC,UAAU,QAAO7L,SAAA,CAC3B0C,cAACgJ,IAAKI,MAAK,CAAC1H,UAAU,UAASpE,SAAC,kBAChC0C,cAACgJ,IAAKK,QAAO,CACX3H,UAAWG,IAAOyH,MAClBC,KAAK,QACLC,YAAY,mBACZlB,KAAK,QACLpI,MAAO2H,EACP4B,SAAUrB,OAGD,QADAZ,EACZU,EAAOL,aAAK,IAAAL,OAAA,EAAZA,EAAckC,KAAI,SAACC,EAAKC,GAAG,OAC1B5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAAEqM,GAAxBC,EAAoC,IAIlDrI,eAACyH,IAAKE,MAAK,CAACC,UAAU,YAAW7L,SAAA,CAC/B0C,cAACgJ,IAAKI,MAAK,CAAC1H,UAAU,UAASpE,SAAC,aAChC0C,cAACgJ,IAAKK,QAAO,CACX3H,UAAWG,IAAOyH,MAClBC,KAAK,WACLC,YAAY,oBACZlB,KAAK,YACLpI,MAAO4H,EACP2B,SAAUrB,OAGG,QADJX,EACZS,EAAOJ,iBAAS,IAAAL,OAAA,EAAhBA,EAAkBiC,KAAI,SAACC,EAAKC,GAAG,OAC9B5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAAEqM,GAAxBC,EAAoC,IAIlDrI,eAACyH,IAAKE,MAAK,CAACC,UAAU,YAAW7L,SAAA,CAC/B0C,cAACgJ,IAAKI,MAAK,CAAC1H,UAAU,UAASpE,SAAC,qBAChC0C,cAACgJ,IAAKK,QAAO,CACX3H,UAAWG,IAAOyH,MAClBC,KAAK,WACLC,YAAY,wBACZlB,KAAK,YACLpI,MAAO6H,EACP0B,SAAUrB,OAGG,QADJV,EACZQ,EAAOH,iBAAS,IAAAL,OAAA,EAAhBA,EAAkBgC,KAAI,SAACC,EAAKC,GAAG,OAC9B5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAAEqM,GAAxBC,EAAoC,IAI1B,QAHtBjC,EAGDO,EAAO4B,wBAAgB,IAAAnC,OAAA,EAAvBA,EAAyB+B,KAAI,SAACC,EAAKC,GAAG,OACrC5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAAEqM,GAAxBC,EAAoC,IAIlD5J,cAACoF,IAAM,CACL1D,UAAS,GAAAE,OAAKmI,IAAU3E,OAAM,KAAAxD,OAAImI,IAAUC,KAAI,KAAApI,OAAImI,IAAUE,OAAM,SACpEV,KAAK,SAAQjM,SACd,kBAML0C,cAAC4C,IAAS,CAAClB,UAAS,QAAAE,OAAU+G,IAAUC,QAAO,gBAAetL,SAC5DiE,eAAC4D,IAAI,CAACzD,UAAWG,IAAOsD,KAAM1D,GAAG,UAASnE,SAAA,CAAC,4BAChB0C,cAAA,QAAA1C,SAAM,0BAKrC0C,cAACsE,IAAG,CACFC,GAAI,EACJ7C,UAAS,iCAAAE,OAAmCC,IAAOqI,WAAY5M,SAE/D0C,cAACmK,IAAK,CACJzI,UAAWiH,IAAUyB,YACrBrH,IAAI,gFACJC,IAAI,+CAKd,ECGeqH,OAvJf,WAAuB,IAAD9C,EAAAE,EAAAE,EACd/J,EAAiBT,IAEvBI,EAAoCC,mBAAS,CAC3CoK,SAAU,GACV0C,SAAU,KACV7M,EAAAC,YAAAH,EAAA,GAHKgN,EAAU9M,EAAA,GAAE+M,EAAa/M,EAAA,GAMxBmK,EAAuB2C,EAAvB3C,SAAU0C,EAAaC,EAAbD,SAGlB7E,EAA4BjI,mBAAS,CAAC,GAAEkI,EAAAhI,YAAA+H,EAAA,GAAjCyC,EAAMxC,EAAA,GAAEyC,EAASzC,EAAA,GACxB+E,EAA4CjN,mBAAS,IAAGkN,EAAAhN,YAAA+M,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAGlC7M,EAAUC,cAGVsK,EAAe,SAAC3H,GACpB+J,EAAazG,wBAAC,CAAC,EACVwG,GAAU,GAAAlC,YAAA,GACZ5H,EAAMG,OAAO0H,KAAO7H,EAAMG,OAAOV,QAEtC,EAGMqI,EAAY,eAAAlL,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,EAAOoC,GAAK,IAAAoK,EAAAtM,EAAAiK,EAAA,OAAArK,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAAvB8B,EAAMgI,iBAAiBhK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEpC,EAAS4E,KAAK,2BAA4BoJ,GAAY,KAAD,EAAAM,EAAApM,EAAAI,KAApEN,EAAIsM,EAAJtM,KAERX,EAAeW,EAAKuM,MAEpBF,EAAkB,oCAClBzC,EAAU,CAAC,GAGX4C,YAAW,WACTlN,EAAQiC,KAAK,IACf,GAAG,MAAMrB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAET0J,GAAsB,QAAZK,EAAA/J,EAAAK,GAAIa,gBAAQ,IAAA6I,OAAA,EAAZA,EAAcjK,OAAQ,CAAC,GACjCqM,EAAkB,IAAK,yBAAAnM,EAAAM,OAAA,GAAAV,EAAA,mBAE1B,gBAlBiBqK,GAAA,OAAArL,EAAA2B,MAAA,KAAAC,UAAA,KAoBlB,OACEsC,eAAC8C,IAAG,CAAC3C,UAAWG,IAAOwC,IAAI/G,SAAA,CAEzBiE,eAAC+C,IAAG,CAAC5C,UAAU,qBAAqB6C,GAAI,EAAEjH,SAAA,CACxCiE,eAACqB,IAAS,CAAClB,UAAS,GAAAE,OAAK+G,IAAUC,QAAO,QAAOtL,SAAA,CAE/C0C,cAAA,MAAI0B,UAAS,GAAAE,OAAKC,IAAOgH,OAAM,+BAA8BvL,SAAC,iBAI9D0C,cAAA,KACE0B,UAAU,8BACVoH,MAAO,CAAEC,SAAU,WAAYzL,SAChC,0CAKAqN,GACC3K,cAAC6J,IAAK,CAACxE,QAAQ,UAAU3D,UAAU,cAAapE,SAC7CqN,IAKLpJ,eAACyH,IAAI,CAACC,SAAUV,EAAajL,SAAA,CAE3BiE,eAACyH,IAAKE,MAAK,CAACC,UAAU,WAAU7L,SAAA,CAC9B0C,cAACgJ,IAAKI,MAAK,CAAC1H,UAAU,UAASpE,SAAC,aAChC0C,cAACgJ,IAAKK,QAAO,CACXE,KAAK,OACLC,YAAY,WACZlB,KAAK,WACLpI,MAAO0H,EACP6B,SAAUrB,EACV1G,UAAWG,IAAOyH,WAIN,QAFH/B,EAEZW,EAAON,gBAAQ,IAAAL,OAAA,EAAfA,EAAiBmC,KAAI,SAACC,EAAKC,GAAG,OAC7B5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAC/BqM,GADSC,EAEJ,IAIVrI,eAACyH,IAAKE,MAAK,CAACC,UAAU,WAAU7L,SAAA,CAC9B0C,cAACgJ,IAAKI,MAAK,CAAC1H,UAAU,UAASpE,SAAC,aAChC0C,cAACgJ,IAAKK,QAAO,CACXE,KAAK,WACLC,YAAY,WACZlB,KAAK,WACLpI,MAAOoK,EACPb,SAAUrB,EACV1G,UAAWG,IAAOyH,WAIN,QAFH7B,EAEZS,EAAOoC,gBAAQ,IAAA7C,OAAA,EAAfA,EAAiBiC,KAAI,SAACC,EAAKC,GAAG,OAC7B5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAC/BqM,GADSC,EAEJ,IAIc,QAHtBjC,EAGDO,EAAO4B,wBAAgB,IAAAnC,OAAA,EAAvBA,EAAyB+B,KAAI,SAACC,EAAKC,GAAG,OACrC5J,cAAC6J,IAAK,CAAWxE,QAAQ,UAAS/H,SAC/BqM,GADSC,EAEJ,IAIV5J,cAACoF,IAAM,CACL1D,UAAS,GAAAE,OAAKmI,IAAU3E,OAAM,KAAAxD,OAAImI,IAAUC,KAAI,KAAApI,OAAImI,IAAUE,OAAM,SACpEV,KAAK,SAAQjM,SACd,kBAOL0C,cAAC4C,IAAS,CAAClB,UAAS,QAAAE,OAAU+G,IAAUC,SAAUtL,SAChDiE,eAAC4D,IAAI,CAACzD,UAAWG,IAAOsD,KAAM1D,GAAG,UAASnE,SAAA,CAAC,0BAClB0C,cAAA,QAAA1C,SAAM,yBAMnC0C,cAACsE,IAAG,CACFC,GAAI,EACJ7C,UAAS,iCAAAE,OAAmCC,IAAOmJ,WAAY1N,SAE/D0C,cAACmK,IAAK,CACJzI,UAAS,GAAAE,OAAK+G,IAAUyB,aACxBrH,IAAI,+KACJC,IAAI,+BAKd,E,kDChEeiI,OApGf,SAAiB5N,GAAqC,IAAlC6N,EAAI7N,EAAJ6N,KAAMC,EAAW9N,EAAX8N,YAAaC,EAAU/N,EAAV+N,WAQrC,OAEEpL,aADA,CACCsE,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAG9C,UAAU,OAAMpE,SACjC0C,cAACyE,IACC,CACA/C,UAAS,GAAAE,OAAKC,KAAOwJ,SAAQ,KAAAzJ,OACZ,SAAfsJ,EAAKI,MAAmBzJ,KAAO0J,KAAO,GAAE,4BAAA3J,OAEtB,SAAlBsJ,EAAKM,SACD,gBACkB,WAAlBN,EAAKM,SACL,iBACA,kBACHlO,SAEHiE,eAACkD,IAAKC,KAAI,CAAChD,UAAWG,KAAO4J,aAAanO,SAAA,CAExCiE,eAAA,OAAKG,UAAWG,KAAO6J,UAAUpO,SAAA,CAC/B0C,cAAA,KAAG0B,UAAU,oCACb1B,cAAA,UAAA1C,SAAQ,WACR0C,cAACgJ,IAAKK,QAAO,CACXzE,GAAG,SACH1E,MAAOgL,EAAKI,MACZ7B,SAAU,SAACkC,GAAC,OAAKR,EAAYD,EAAMS,EAAE/K,OAAOV,MAAM,EAClDwB,UAAU,OAAMpE,SAGfsO,OAAOC,QAjCC,CACnBC,KAAM,OACNC,YAAa,cACbR,KAAM,SA8BkC7B,KAAI,SAAAzL,GAAA,IAAAiE,EAAAxE,YAAAO,EAAA,GAAEiC,EAAKgC,EAAA,GAAE8J,EAAK9J,EAAA,UAC9ClC,cAAA,UAAoBE,MAAOA,EAAM5C,SAC9B0O,GADU9L,EAEJ,SAMfqB,eAAC4D,IAAI,CAAC1D,GAAE,UAAAG,OAAYsJ,EAAK7H,IAAM3B,UAAWG,KAAOoK,UAAU3O,SAAA,CACzD0C,cAAA,KAAG0B,UAAU,mCACZwJ,EAAKxE,SAIR1G,cAACyE,IAAKS,KAAI,CAAA5H,SAAE4N,EAAKgB,cAGjB3K,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,2CACb1B,cAAA,UAAA1C,SAAQ,cAAkB,IAAE4N,EAAKiB,YAInC5K,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,4CACb1B,cAAA,UAAA1C,SAAQ,SAAa,IAAE4N,EAAKkB,YAI9B7K,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,oCACb1B,cAAA,UAAA1C,SAAQ,cAAmB,IAC3B0C,cAACqM,KAAK,CACJC,GACoB,SAAlBpB,EAAKM,SACD,SACkB,WAAlBN,EAAKM,SACL,UACA,UACLlO,SAEA4N,EAAKM,cAKVjK,eAAA,OAAKG,UAAWG,KAAO0K,eAAejP,SAAA,CACpCiE,eAAC4D,IAAI,CAAC1D,GAAE,UAAAG,OAAYsJ,EAAK7H,GAAE,SAAS3B,UAAU,iCAAgCpE,SAAA,CAC5E0C,cAAA,KAAG0B,UAAU,qBAAuB,UAEtCH,eAAC6D,IAAM,CACLC,QAAQ,iBACRN,KAAK,KACL3C,QAAS,kBAAMgJ,EAAWF,EAAK7H,GAAG,EAAC/F,SAAA,CAEnC0C,cAAA,KAAG0B,UAAU,0BAA4B,qBAOvD,ECvCe8K,OA5Df,SAA0BnP,GAAwB,IAArB6N,EAAI7N,EAAJ6N,KAAME,EAAU/N,EAAV+N,WACjC,OACEpL,cAACsE,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAG9C,UAAU,OAAMpE,SAEjC0C,cAACyE,IAAI,CAAC/C,UAAS,GAAAE,OAAKC,KAAO4K,cAAa,cAAanP,SACnDiE,eAACkD,IAAKC,KAAI,CAAApH,SAAA,CAERiE,eAACkD,IAAKE,MAAK,CAACjD,UAAWG,KAAO6K,mBAAmBpP,SAAA,CAC/C0C,cAAA,KAAG0B,UAAU,0CACZwJ,EAAKxE,SAIR1G,cAACyE,IAAKS,KAAI,CAAA5H,SAAE4N,EAAKgB,cAGjB3K,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,2CACb1B,cAAA,UAAA1C,SAAQ,cAAkB,IAAE4N,EAAKiB,YAInC5K,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,8CACb1B,cAAA,UAAA1C,SAAQ,eAAmB,IAAE4N,EAAKkB,YAIpC7K,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,kCACb1B,cAAA,UAAA1C,SAAQ,cAAmB,IAC3B0C,cAACqM,KAAK,CACJC,GACoB,SAAlBpB,EAAKM,SACD,SACkB,WAAlBN,EAAKM,SACL,UACA,UACLlO,SAEA4N,EAAKM,cAKVxL,cAAA,OAAK0B,UAAWG,KAAO8K,oBAAoBrP,SACzCiE,eAAC6D,IAAM,CACLL,KAAK,KACLM,QAAQ,iBACRjD,QAAS,kBAAMgJ,EAAWF,EAAK7H,GAAG,EAAC/F,SAAA,CAEnC0C,cAAA,KAAG0B,UAAU,0BAA4B,oBAOvD,E,mBC/BekL,OA5Bf,SAA2BvP,GAAwD,IAArDwP,EAAKxP,EAALwP,MAAOC,EAAWzP,EAAXyP,YAAaC,EAAc1P,EAAd0P,eAAgBC,EAAY3P,EAAZ2P,aAE1DC,EAAaC,KAAKC,KAAKN,EAAQG,GAGrC,OAAIC,GAAc,EAAU,KAI1BjN,aADA,CACA,OAAK0B,UAAU,qCAAoCpE,SACjD0C,cAACoN,KAAW,CAAA9P,SAET+P,aAAIjH,MAAM6G,GAAYK,QAAQ5D,KAAI,SAAC6D,GAAG,OACrCvN,cAACoF,IAAM,CAGLC,QAASyH,IAAgBS,EAAM,EAAI,UAAY,kBAE/CnL,QAAS,kBAAM2K,EAAeQ,EAAM,EAAE,EAACjQ,SAEtCiQ,EAAM,GANFA,EAOE,OAKnB,ECLeC,OArBf,SAA2BnQ,GAAyD,IAAtDoQ,EAAUpQ,EAAVoQ,WAAYC,EAAgBrQ,EAAhBqQ,iBAAkBC,EAAmBtQ,EAAnBsQ,oBAC1D,OAEE3N,aADA,CACCoN,KAAW,CAAC1L,UAAU,+CAA8CpE,SAElEmQ,EAAW/D,KAAI,SAACkE,GAAG,OAClBrM,eAAC6D,IAAM,CAGLC,QAASuI,IAAQF,EAAmB,UAAY,kBAChDtL,QAAS,kBAAMuL,EAAoBC,EAAI,EACvClM,UAAU,MAAMpE,SAAA,CAEhB0C,cAAA,KAAG0B,UAAU,oBAAsB,IAClCkM,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAAG,MAPvCH,EAQE,KAIjB,ECoIeI,OAvIf,WACE,IAAAC,EChBsB,WAEtB,IAAA1Q,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B2Q,EAAKzQ,EAAA,GAAE0Q,EAAQ1Q,EAAA,GAEtBgI,EAAoCjI,mBAAS,IAAGkI,EAAAhI,YAAA+H,EAAA,GAAzCgI,EAAU/H,EAAA,GAAE0I,EAAa1I,EAAA,GAGhC3H,qBAAU,WACR,IAAMsQ,EAAU,eAAAhR,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAiQ,EAAAC,EAAA,OAAApQ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGGpC,EAASqC,IAAI,eAAe,KAAD,EAAvC0P,EAAG7P,EAAAI,KACH0P,EAAWD,EAAI/P,KAAKgI,QAE1B4H,EAASI,GAETH,EAAc,CAAC,OAAKxM,OAAAyL,aAAK,IAAImB,IAAID,EAAS7E,KAAI,SAAC+E,GAAC,OAAKA,EAAEtC,QAAQ,QAAK1N,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGpE2C,QAAQ7B,MAAM,wBAAuBd,EAAAK,IAAO,yBAAAL,EAAAM,OAAA,GAAAV,EAAA,kBAE/C,kBAbe,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAchBoP,GACF,GAAG,IAGH,IAAMjD,EAAU,eAAAnN,EAAAC,YAAAC,cAAAC,MAAG,SAAAsQ,EAAOrL,GAAE,OAAAlF,cAAAK,MAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,WACtBiQ,OAAOC,QAAQ,8CAA8C,CAADF,EAAAhQ,KAAA,gBAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAAhQ,KAAA,EAGtDpC,EAASuS,OAAO,cAADlN,OAAeyB,EAAE,MAAK,KAAD,EAE1C8K,GAAS,SAACzP,GAAI,OAAKA,EAAKqQ,QAAO,SAACN,GAAC,OAAKA,EAAEpL,KAAOA,CAAE,GAAC,IAAEsL,EAAAhQ,KAAA,gBAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAA7P,GAAA6P,EAAA,SAGpDvN,QAAQ7B,MAAM,uBAAsBoP,EAAA7P,IAAO,yBAAA6P,EAAA5P,OAAA,GAAA2P,EAAA,kBAGhD,gBAZehG,GAAA,OAAAzK,EAAAe,MAAA,KAAAC,UAAA,KAeV+P,EAAe,eAAA9M,EAAAhE,YAAAC,cAAAC,MAAG,SAAA6Q,EAAO/D,EAAMgE,GAAQ,IAAAC,EAAA,OAAAhR,cAAAK,MAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,OAIzC,OAJyCyQ,EAAA1Q,KAAA,EAGnCyQ,EAAa,IAAIE,KAAKnE,EAAKkB,UAAUkD,cAC3CF,EAAAzQ,KAAA,EACMpC,EAASgT,IAAI,cAAD3N,OAAesJ,EAAK7H,GAAE,KAAAU,wBAAA,GACnCmH,GAAI,IACPkB,SAAU+C,EACV7D,MAAO4D,KACN,KAAD,EAEFf,GAAS,SAACzP,GAAI,OACZA,EAAKgL,KAAI,SAAC+E,GAAC,OAAMA,EAAEpL,KAAO6H,EAAK7H,GAAEU,wBAAA,GAAQ0K,GAAC,IAAEnD,MAAO4D,IAAaT,CAAC,GAAE,IACnEW,EAAAzQ,KAAA,gBAAAyQ,EAAA1Q,KAAA,EAAA0Q,EAAAtQ,GAAAsQ,EAAA,SAGFhO,QAAQ7B,MAAM,6BAA4B6P,EAAAtQ,IAAO,yBAAAsQ,EAAArQ,OAAA,GAAAkQ,EAAA,kBAEpD,gBAlBoBO,EAAAC,GAAA,OAAAvN,EAAAlD,MAAA,KAAAC,UAAA,KAqErB,MAAO,CACLiP,QACAC,WACAV,aACArC,aACA4D,kBACAU,mBAtDyB,SAAHvN,GAAkD,IAA5CuL,EAAgBvL,EAAhBuL,iBAAkBiC,EAAUxN,EAAVwN,WAAYC,EAAMzN,EAANyN,OAC1D,OAAO1B,EAEJa,QAAO,SAAC7D,GAAI,MACU,QAArBwC,GAAoCxC,EAAKiB,WAAauB,CAAgB,IAGvEqB,QAAO,SAAC7D,GAAI,MACX,GAAAtJ,OAAGsJ,EAAKxE,MAAK,KAAA9E,OAAIsJ,EAAKgB,aACnB2D,cACAC,SAASH,EAAWE,cAAc,IAGtCE,MAAK,SAACC,EAAGC,GACR,GAAe,aAAXL,EACF,OAAO,IAAIP,KAAKW,EAAE5D,UAAY,IAAIiD,KAAKY,EAAE7D,UAE3C,IAAM8D,EAAe,CAAEC,KAAM,EAAGC,OAAQ,EAAGC,IAAK,GAChD,OAAOH,EAAaF,EAAExE,UAAY0E,EAAaD,EAAEzE,SACnD,GACJ,EAmCE8E,WAhCiB,SAACC,GAClB,IAAMC,EAAQ,IAAInB,KACZoB,EAAY,IAAIpB,KACtBoB,EAAUC,QAAQF,EAAMG,UAAY,GAEpC,IAAMC,EAAa,GACbC,EAAY,GACZC,EAAa,GAcnB,OAXAP,EAASQ,SAAQ,SAAC7F,GAChB,IAAM8F,EAAM,IAAI3B,KAAKnE,EAAKkB,UACtB4E,EAAIC,iBAAmBT,EAAMS,eAC/BL,EAAW9Q,KAAKoL,GACP8F,GAAOP,EAChBI,EAAU/Q,KAAKoL,GAEf4F,EAAWhR,KAAKoL,EAEpB,IAEO,CAAE0F,aAAYC,YAAWC,aAClC,EAYF,CDhGMI,GANFhD,EAAKD,EAALC,MACAT,EAAUQ,EAAVR,WACArC,EAAU6C,EAAV7C,WACA4D,EAAef,EAAfe,gBACAU,EAAkBzB,EAAlByB,mBACAY,EAAUrC,EAAVqC,WAGF/S,EAAgDC,mBAAS,OAAMC,EAAAC,YAAAH,EAAA,GAAxDmQ,EAAgBjQ,EAAA,GAAEkQ,EAAmBlQ,EAAA,GAC5CgI,EAAoCjI,mBAAS,IAAGkI,EAAAhI,YAAA+H,EAAA,GAAzCkK,EAAUjK,EAAA,GAAEyL,EAAazL,EAAA,GAChC+E,EAA4BjN,mBAAS,YAAWkN,EAAAhN,YAAA+M,EAAA,GAAzCmF,EAAMlF,EAAA,GAAE0G,EAAS1G,EAAA,GACxB2G,EAAsC7T,mBAAS,GAAE8T,EAAA5T,YAAA2T,EAAA,GAA1CvE,EAAWwE,EAAA,GAAEvE,EAAcuE,EAAA,GAG5BC,EAAgB7B,EAAmB,CAAEhC,mBAAkBiC,aAAYC,WACnE4B,EAAiBD,EAAcxC,QAAO,SAACN,GAAC,MAAiB,SAAZA,EAAEnD,KAAgB,IAErEmG,EAA8CnB,EAD1BiB,EAAcxC,QAAO,SAACN,GAAC,MAAiB,SAAZA,EAAEnD,KAAgB,KAC1DsF,EAAUa,EAAVb,WAAYC,EAASY,EAATZ,UAAWC,EAAUW,EAAVX,WAEzBY,EAAW,SAACC,GAChB,IAAMC,EARa,GAQJ9E,EAAc,GAC7B,OAAO6E,EAAM5D,MAAM6D,EAAOA,EATP,EAUrB,EAEMC,EACJ3D,EAAM5H,OAAS,EACX4G,KAAK4E,MACF5D,EAAMa,QAAO,SAACN,GAAC,MAAiB,SAAZA,EAAEnD,KAAgB,IAAEhF,OAAS4H,EAAM5H,OAAU,KAEpE,EAEN,OACE/E,eAACqB,IAAS,CAAAtF,SAAA,CACRiE,eAAA,MAAIG,UAAU,mBAAkBpE,SAAA,CAC9B0C,cAAA,KAAG0B,UAAU,+BAAiC,gBAGhD1B,cAAA,OAAK0B,UAAWG,KAAOkQ,gBAAgBzU,SACrC0C,cAACgS,KAAW,CAACC,IAAKJ,EAAU7F,MAAK,GAAApK,OAAKiQ,EAAQ,kBAGhD7R,cAAA,OAAK0B,UAAU,gBAAepE,SAC5BiE,eAAC4D,IAAI,CAAC1D,GAAG,gBAAgBC,UAAU,kBAAiBpE,SAAA,CAClD0C,cAAA,KAAG0B,UAAU,4BAA8B,iBAK/CH,eAAC8C,IAAG,CAAC3C,UAAU,8BAA6BpE,SAAA,CAC1C0C,cAACsE,IAAG,CAACC,GAAI,EAAEjH,SACT0C,cAACgJ,IAAKK,QAAO,CACXE,KAAK,OACLC,YAAY,+BACZtJ,MAAOyP,EACPlG,SAAU,SAACkC,GAAC,OAAKwF,EAAcxF,EAAE/K,OAAOV,MAAM,MAGlDF,cAACsE,IAAG,CAACC,GAAI,EAAEjH,SACTiE,eAAC2Q,KAAQ,CAACC,SAAU,SAACC,GAAG,OAAKhB,EAAUgB,EAAI,EAAC9U,SAAA,CAC1CiE,eAAC2Q,KAAS/O,OAAM,CAACkC,QAAQ,YAAY3D,UAAU,QAAOpE,SAAA,CACpD0C,cAAA,KAAG0B,UAAU,qBAAuB,YACf,aAAXkO,EAAwB,WAAa,cAEjDrO,eAAC2Q,KAASG,KAAI,CAAA/U,SAAA,CACZ0C,cAACkS,KAASI,KAAI,CAACC,SAAS,WAAUjV,SAAC,aACnC0C,cAACkS,KAASI,KAAI,CAACC,SAAS,WAAUjV,SAAC,wBAO3C0C,cAACwN,GAAkB,CACjBC,WAAYA,EACZC,iBAAkBA,EAClBC,oBAAqBA,IAItB,CACC,CAAEjH,MAAO,QAASI,KAAM,eAAgB0L,MAAO,OAAQtE,MAAO0C,GAC9D,CAAElK,MAAO,YAAaI,KAAM,gBAAiB0L,MAAO,UAAWtE,MAAO2C,GACtE,CAAEnK,MAAO,QAASI,KAAM,gBAAiB0L,MAAO,YAAatE,MAAO4C,IACpEpH,KAAI,SAAArM,GAAA,IAAGqJ,EAAKrJ,EAALqJ,MAAOI,EAAIzJ,EAAJyJ,KAAM0L,EAAKnV,EAALmV,MAAOtE,EAAK7Q,EAAL6Q,MAAK,OAChC3M,eAAA,WAAAjE,SAAA,CACEiE,eAAA,MAAIG,UAAS,QAAAE,OAAUC,KAAO4Q,cAAenV,SAAA,CAC3C0C,cAAA,KAAG0B,UAAS,UAAAE,OAAYkF,EAAI,eAAAlF,OAAc4Q,KACzC9L,KAEH1G,cAACqE,IAAG,CAAA/G,SACDoU,EAASxD,GAAO5H,OACboL,EAASxD,GAAOxE,KAAI,SAACwB,GAAI,OACvBlL,cAACiL,GAAQ,CAEPC,KAAMA,EACNC,YAAa6D,EACb5D,WAAYA,GAHPF,EAAK7H,GAIV,IAEJ9B,eAAA,KAAAjE,SAAA,CAAG,gBAAcoJ,EAAMmJ,cAAc,SAE3C7P,cAAC4M,GAAkB,CACjBC,MAAOqB,EAAM5H,OACbwG,YAAaA,EACbC,eAAgBA,EAChBC,aA7FW,MAwEDtG,EAuBJ,IAIZnF,eAAA,WAASG,UAAWG,KAAO6Q,iBAAiBpV,SAAA,CAC1CiE,eAAA,MAAIG,UAAS,QAAAE,OAAUC,KAAO4Q,cAAenV,SAAA,CAC3C0C,cAAA,KAAG0B,UAAU,0CAA4C,eAE3D1B,cAACqE,IAAG,CAAA/G,SACDoU,EAASF,GAAgBlL,OACtBoL,EAASF,GAAgB9H,KAAI,SAACwB,GAAI,OAChClL,cAACwM,GAAiB,CAAetB,KAAMA,EAAME,WAAYA,GAAjCF,EAAK7H,GAA0C,IAEzErD,cAAA,KAAA1C,SAAG,0BAET0C,cAAC4M,GAAkB,CACjBC,MAAO2E,EAAelL,OACtBwG,YAAaA,EACbC,eAAgBA,EAChBC,aAlHa,SAuHvB,EEnJM2F,GAAU,CACdC,WAAY,CACV,CAAE1S,MAAO,MAAO8L,MAAO,OACvB,CAAE9L,MAAO,SAAU8L,MAAO,UAC1B,CAAE9L,MAAO,OAAQ8L,MAAO,SAE1B6G,OAAQ,CACN,CAAE3S,MAAO,OAAQ8L,MAAO,QACxB,CAAE9L,MAAO,cAAe8L,MAAO,eAC/B,CAAE9L,MAAO,OAAQ8L,MAAO,QACxB,CAAE9L,MAAO,UAAW8L,MAAO,YAE7B8G,WAAY,CACV,CAAE5S,MAAO,OAAQ8L,MAAO,QACxB,CAAE9L,MAAO,WAAY8L,MAAO,YAC5B,CAAE9L,MAAO,UAAW8L,MAAO,WAC3B,CAAE9L,MAAO,UAAW8L,MAAO,WAC3B,CAAE9L,MAAO,OAAQ8L,MAAO,mBAgBtB+G,GAAmB,SAAH1V,GAAA,IAAA2V,EACpBhH,EAAK3O,EAAL2O,MACAiH,EAAO5V,EAAP4V,QACAC,EAAQ7V,EAAR6V,SACAf,EAAQ9U,EAAR8U,SACAhJ,EAAS9L,EAAT8L,UAASgK,EAAA9V,EACT+V,gBAAQ,IAAAD,GAAQA,EAAA,OAEhB5R,eAACyH,IAAKE,MAAK,CAACxH,UAAU,OAAOyH,UAAWA,EAAU7L,SAAA,CAChD0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAE0O,IACbzK,eAAC2Q,KAAQ,CAACC,SAAUiB,OAAWC,EAAYlB,EAAS7U,SAAA,CAClD0C,cAACkS,KAAS/O,OAAM,CAACkC,QAAQ,YAAY+N,SAAUA,EAAS9V,UAEZ,QAAzC0V,EAAAC,EAAQK,MAAK,SAACC,GAAC,OAAKA,EAAErT,QAAUgT,CAAQ,WAAC,IAAAF,OAAA,EAAzCA,EAA2ChH,QAAS,YAErDoH,GACApT,cAACkS,KAASG,KAAI,CAAA/U,SAEX2V,EAAQvJ,KAAI,SAAAzL,GAAA,IAAGiC,EAAKjC,EAALiC,MAAO8L,EAAK/N,EAAL+N,MAAK,OAC1BhM,cAACkS,KAASI,KAAI,CAAaC,SAAUrS,EAAM5C,SACxC0O,GADiB9L,EAEJ,WAKb,EA0GAsT,OA1Ff,SAAiBtR,GAQb,IAPFuR,EAAQvR,EAARuR,SACArL,EAAYlG,EAAZkG,aACAsL,EAAYxR,EAAZwR,aACAnL,EAAYrG,EAAZqG,aACAoL,EAAUzR,EAAVyR,WACAC,EAAU1R,EAAV0R,WAAUC,EAAA3R,EACV4R,gBAAQ,IAAAD,GAAQA,EAEhB,OACEtS,eAACyH,IAAI,CAACC,SAAUV,EAAajL,SAAA,CAE3BiE,eAACyH,IAAKE,MAAK,CAACxH,UAAU,OAAOyH,UAAU,QAAO7L,SAAA,CAC5C0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,UACZ0C,cAACgJ,IAAKK,QAAO,CACXE,KAAK,OACLjB,KAAK,QACLpI,MAAOuT,EAAS/M,MAChB+C,SAAUqK,OAAWT,EAAYjL,EACjC0L,SAAUA,EACVC,UAAQ,OAKZxS,eAACyH,IAAKE,MAAK,CAACxH,UAAU,OAAOyH,UAAU,cAAa7L,SAAA,CAClD0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,gBACZ0C,cAACgJ,IAAKK,QAAO,CACXzE,GAAG,WACHoP,KAAM,EACN1L,KAAK,cACLpI,MAAOuT,EAASvH,YAChBzC,SAAUqK,OAAWT,EAAYjL,EACjC0L,SAAUA,OAKdvS,eAACyH,IAAKE,MAAK,CAACxH,UAAU,OAAOyH,UAAU,WAAU7L,SAAA,CAC/C0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,aACZ0C,cAACgJ,IAAKK,QAAO,CACXE,KAAK,OACLjB,KAAK,WACLpI,MAAOuT,EAASrH,UAAY,GAC5B3C,SAAUqK,OAAWT,EAAYjL,EACjC0L,SAAUA,EACVG,IAAKN,EAAaA,KAAe,IAAItE,MAAOC,cAAc4E,MAAM,KAAK,GACrEH,UAAQ,OAKZ/T,cAAC+S,GAAgB,CACf/G,MAAM,WACNiH,QAASN,GAAQC,WACjBM,SAAUO,EAASjI,SACnB2G,SAAU2B,OAAWT,EAAY,SAACnT,GAAK,OAAKwT,EAAa,WAAbA,CAAyBxT,EAAM,EAC3EiJ,UAAU,WACViK,SAAUU,IAIZ9T,cAAC+S,GAAgB,CACf/G,MAAM,QACNiH,QAASN,GAAQE,OACjBK,SAAUO,EAASnI,MACnB6G,SAAU2B,OAAWT,EAAY,SAACnT,GAAK,OAAKwT,EAAa,QAAbA,CAAsBxT,EAAM,EACxEiJ,UAAU,QACViK,SAAUU,IAIZ9T,cAAC+S,GAAgB,CACf/G,MAAM,WACNiH,QAASN,GAAQG,WACjBI,SAAUO,EAAStH,SACnBgG,SAAU2B,OAAWT,EAAY,SAACnT,GAAK,OAAKwT,EAAa,WAAbA,CAAyBxT,EAAM,EAC3EiJ,UAAU,WACViK,SAAUU,KAGVA,GACA9T,cAACoF,IAAM,CAACC,QAAQ,UAAUkE,KAAK,SAAQjM,SACpCsW,EAAa,cAAgB,kBAKxC,ECzHeO,GA3CK,SAACC,EAAQvW,GAC3B,IAAAN,EAAgCC,mBAAS,CACvCkJ,MAAO,GACPwF,YAAa,GACbE,SAAU,GACVZ,SAAU,SACVF,MAAO,OACPa,SAAU,OACVkI,MAAO,KACP5W,EAAAC,YAAAH,EAAA,GARKkW,EAAQhW,EAAA,GAAE6W,EAAW7W,EAAA,GAgBtB8K,EAAY,eAAAtK,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOsN,GAAC,IAAA4I,EAAA,OAAApW,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKuD,OAJlFgN,EAAElD,iBAAiBhK,EAAAC,KAAA,EAEX6V,EAAOxQ,wBAAA,GACR0P,GAAQ,IACXrH,SAAUqH,EAASrH,SAAW,IAAIiD,KAAKoE,EAASrH,UAAUkD,cAAgB,OAAI7Q,EAAAE,KAAA,EAE1EpC,EAASgT,IAAI,cAAD3N,OAAewS,EAAM,KAAKG,GAAS,KAAD,EACpD1W,EAAQiC,KAAK,UAAUrB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvB+V,MAAM,yBAAyB,yBAAA/V,EAAAM,OAAA,GAAAV,EAAA,kBAElC,gBAZiBqK,GAAA,OAAAzK,EAAAe,MAAA,KAAAC,UAAA,KAgBlB,MAAO,CACLwU,WACAa,cACAlM,aAzBmB,SAAH/K,GAAA,IAAAoX,EAAApX,EAAMuD,OAAU0H,EAAImM,EAAJnM,KAAMpI,EAAKuU,EAALvU,MAAK,OAC3CoU,GAAY,SAAC5V,GAAI,OAAAqF,wBAAA,GAAWrF,GAAI,GAAA2J,YAAA,GAAGC,EAAOpI,GAAK,GAAK,EAyBpDwT,aAvBmB,SAACgB,GAAK,OAAK,SAACnC,GAAQ,OACvC+B,GAAY,SAAC5V,GAAI,OAAAqF,wBAAA,GAAWrF,GAAI,GAAA2J,YAAA,GAAGqM,EAAQnC,GAAQ,GAAK,CAAD,EAuBvDhK,eACAoL,WARiB,WAAH,OAAS,IAAItE,MAAOC,cAAcvB,MAAM,EAAG,GAAI,EAUjE,E,oBCvBe4G,OAjBf,SAAwBtX,GAAY,IAATuX,EAAIvX,EAAJuX,KACzB,OACE5U,cAACyE,IAAI,CAAC/C,UAAWG,KAAOgT,SAASvX,SAC/BiE,eAACkD,IAAKC,KAAI,CAAApH,SAAA,CACRiE,eAACkD,IAAKS,KAAI,CAAA5H,SAAA,CACR0C,cAAA,KAAG0B,UAAU,yCACZkT,EAAKE,QAERvT,eAAA,SAAOG,UAAWG,KAAOkT,UAAUzX,SAAA,CACjC0C,cAAA,KAAG0B,UAAU,sBACZ,IAAI2N,KAAKuF,EAAKI,YAAcJ,EAAKK,YAAYC,wBAKxD,E,oBCwEeC,OAjFf,WACE,IAAQ9R,EAAO+R,cAAP/R,GACFxF,EAAUC,cAEhBuX,EAA8ClB,GAAY9Q,EAAIxF,GAAtD4V,EAAQ4B,EAAR5B,SAAUa,EAAWe,EAAXf,YAAaX,EAAU0B,EAAV1B,WAE/BpW,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B8W,EAAK5W,EAAA,GAAE6X,EAAQ7X,EAAA,GACtBgI,EAA0BjI,mBAAS,IAAGkI,EAAAhI,YAAA+H,EAAA,GAA/BlG,EAAKmG,EAAA,GAAE6P,EAAQ7P,EAAA,GAEhB8P,EAAYC,sBAAWvX,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEHpC,EAASqC,IAAI,cAADgD,OAAeyB,EAAE,MAAK,KAAD,EAAA/E,EAAAG,EAAAI,KAAhDN,EAAID,EAAJC,KACR+V,EAAY,CACV5N,MAAOnI,EAAKmI,MACZwF,YAAa3N,EAAK2N,YAClBE,SAAU,IAAIiD,KAAK9Q,EAAK6N,UAAUkD,cAAcvB,MAAM,EAAG,IACzDvC,SAAUjN,EAAKiN,SACfF,MAAO/M,EAAK+M,MACZa,SAAU5N,EAAK4N,SACfkI,MAAO,KAETiB,EAAS/W,EAAK8V,OAAS,IAAK5V,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE5B8W,EAAS,wBAAwB,yBAAA9W,EAAAM,OAAA,GAAAV,EAAA,kBAElC,CAACgF,EAAIiR,IAGRvW,qBAAU,WACRyX,GACF,GAAG,CAACA,IAEJ,IAAME,EAAY,eAAAzX,EAAAC,YAAAC,cAAAC,MAAG,SAAAsQ,IAAA,OAAAvQ,cAAAK,MAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,WACfiQ,OAAOC,QAAQ,8CAA8C,CAADF,EAAAhQ,KAAA,gBAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAAhQ,KAAA,EAEtDpC,EAASuS,OAAO,cAADlN,OAAeyB,EAAE,MAAK,KAAD,EAC1CxF,EAAQiC,KAAK,UAAU6O,EAAAhQ,KAAA,gBAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAA7P,GAAA6P,EAAA,SAEvB6F,MAAM,0BAA0B,yBAAA7F,EAAA5P,OAAA,GAAA2P,EAAA,kBAGrC,kBATiB,OAAAzQ,EAAAe,MAAA,KAAAC,UAAA,KAWlB,OACEsC,eAACqB,IAAS,CAAClB,UAAU,OAAMpE,SAAA,CACzB0C,cAAA,MAAI0B,UAAWG,KAAOoK,UAAU3O,SAAC,gBAEhCiC,GAASS,cAAA,KAAG0B,UAAU,cAAapE,SAAEiC,IAEtCS,cAAA,OAAK0B,UAAWG,KAAO8T,gBAAgBrY,SACrC0C,cAACwT,GAAQ,CAACC,SAAUA,EAAUK,UAAQ,EAACH,WAAYA,MAGrDpS,eAAA,OAAKG,UAAS,yCAAAE,OAA2CC,KAAOsF,aAAc7J,SAAA,CAC5E0C,cAACoF,IAAM,CAACC,QAAQ,YAAYjD,QAAS,kBAAMvE,EAAQiC,KAAK,SAAS,EAACxC,SAAC,kBAGnE0C,cAACoF,IAAM,CAACC,QAAQ,UAAUjD,QAAS,kBAAMvE,EAAQiC,KAAK,UAAD8B,OAAWyB,EAAE,SAAQ,EAAC/F,SAAC,cAG5E0C,cAACoF,IAAM,CAACC,QAAQ,SAASjD,QAASsT,EAAapY,SAAC,mBAKlD0C,cAAA,MAAI0B,UAAU,OAAMpE,SAAC,UACrB0C,cAAA,OAAK0B,UAAWG,KAAO+T,aAAatY,SAChB,IAAjB+W,EAAM/N,OACLtG,cAAA,KAAG0B,UAAU,aAAYpE,SAAC,4BAE1B0C,cAAA,OAAK0B,UAAU,2BAA0BpE,SACtC+W,EAAM3K,KAAI,SAACkL,GAAI,OACd5U,cAAC2U,GAAe,CAAeC,KAAMA,GAAfA,EAAKvR,GAAkB,UAO3D,E,oBCFewS,OA3Bf,WACE,IAIAC,EAzDwB,SAACjY,GAEzB,IAAAkY,EAAgCC,IAAMxY,SAAS,CAC7CkJ,MAAO,GACPwF,YAAa,GACbE,SAAU,GACVZ,SAAU,SACVF,MAAO,OACPa,SAAU,OACVkI,MAAO,KACP4B,EAAAvY,YAAAqY,EAAA,GARKtC,EAAQwC,EAAA,GAAE3B,EAAW2B,EAAA,GAmBtB1N,EAAY,eAAAtK,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOsN,GAAC,IAAA4I,EAAA,OAAApW,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMuD,OALlFgN,EAAElD,iBAAiBhK,EAAAC,KAAA,EAEX6V,EAAOxQ,wBAAA,GACR0P,GAAQ,IAEXrH,SAAUqH,EAASrH,SAAW,IAAIiD,KAAKoE,EAASrH,UAAUkD,cAAgB,OAAI7Q,EAAAE,KAAA,EAE1EpC,EAAS4E,KAAK,cAAeoT,GAAS,KAAD,EAC3C1W,EAAQiC,KAAK,UAAUrB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvB+V,MAAM,yBAAyB,yBAAA/V,EAAAM,OAAA,GAAAV,EAAA,kBAElC,gBAbiBqK,GAAA,OAAAzK,EAAAe,MAAA,KAAAC,UAAA,KAmBlB,MAAO,CACLwU,WACAa,cACAlM,aA9BmB,SAAH/K,GAAA,IAAAoX,EAAApX,EAAMuD,OAAU0H,EAAImM,EAAJnM,KAAMpI,EAAKuU,EAALvU,MAAK,OAC3CoU,GAAY,SAAC5V,GAAI,OAAAqF,wBAAA,GAAWrF,GAAI,GAAA2J,YAAA,GAAGC,EAAOpI,GAAK,GAAK,EA8BpDwT,aA3BmB,SAACgB,GAAK,OAAK,SAACnC,GAAQ,OACvC+B,GAAY,SAAC5V,GAAI,OAAAqF,wBAAA,GAAWrF,GAAI,GAAA2J,YAAA,GAAGqM,EAAQnC,GAAQ,GAAK,CAAD,EA2BvDhK,eACAoL,WATiB,WAAH,OAAS,IAAItE,MAAOC,cAAcvB,MAAM,EAAG,GAAI,EAWjE,CAeMmI,CAVYpY,eAKd2V,EAAQqC,EAARrC,SACArL,EAAY0N,EAAZ1N,aACAsL,EAAYoC,EAAZpC,aACAnL,EAAYuN,EAAZvN,aACAoL,EAAUmC,EAAVnC,WAGF,OACE3T,cAAA,OAAK0B,UAAWG,KAAOsU,kBAAkB7Y,SACvC0C,cAACwT,GAAQ,CACPC,SAAUA,EACVrL,aAAcA,EACdsL,aAAcA,EACdnL,aAAcA,EACdoL,WAAYA,EACZC,YAAY,KAIpB,E,oBC9DewC,GApBY,SAAH/Y,GAAA,IAAMgZ,EAAIhZ,EAAJgZ,KAAMC,EAAMjZ,EAANiZ,OAAQC,EAASlZ,EAATkZ,UAAWhX,EAAKlC,EAALkC,MAAK,OAC1DgC,eAACiV,KAAK,CAACH,KAAMA,EAAMC,OAAQA,EAAQG,UAAQ,EAAAnZ,SAAA,CACzC0C,cAACwW,KAAM3N,OAAM,CAAC6N,aAAW,EAAApZ,SACvB0C,cAACwW,KAAM7R,MAAK,CAAArH,SAAC,qBAEfiE,eAACiV,KAAM9R,KAAI,CAAApH,SAAA,CAAC,6CAETiC,GAASS,cAAA,OAAK0B,UAAU,mBAAkBpE,SAAEiC,OAE/CgC,eAACiV,KAAMG,OAAM,CAAArZ,SAAA,CACX0C,cAACoF,IAAM,CAACC,QAAQ,YAAYjD,QAASkU,EAAOhZ,SAAC,WAG7C0C,cAACoF,IAAM,CAACC,QAAQ,SAASjD,QAASmU,EAAUjZ,SAAC,gBAIzC,ECpBH,SAASsZ,GAAmBC,GACjC,IAAKA,EAAY,MAAO,GACxB,IAAMC,EAAO,IAAIzH,KAAKwH,GACtB,GAAIE,MAAMD,EAAKE,WAAY,MAAO,GAElC,IAAMC,EAAOH,EAAKI,cACZC,GAASL,EAAKM,WAAa,GAAGC,WAAWC,SAAS,EAAG,KACrDC,EAAMT,EAAKnG,UAAU0G,WAAWC,SAAS,EAAG,KAElD,MAAM,GAAN1V,OAAUqV,EAAI,KAAArV,OAAIuV,EAAK,KAAAvV,OAAI2V,EAC7B,CAEO,IAAM5D,GAAa,WAExB,OADU,IAAItE,MACLC,cAAcvB,MAAM,EAAG,GAClC,ECwLeyJ,OA9Lf,WACE,IAAQnU,EAAO+R,cAAP/R,GACF+Q,EAASqD,OAAOpU,GAChBxF,EAAUC,cAIhBuX,EAMIlB,GAAY9Q,EAAIxF,GALlB4V,EAAQ4B,EAAR5B,SACAa,EAAWe,EAAXf,YACAlM,EAAYiN,EAAZjN,aACAsL,EAAY2B,EAAZ3B,aACAnL,EAAY8M,EAAZ9M,aAIFhL,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCma,EAASja,EAAA,GAAEka,EAAYla,EAAA,GAC9BgI,EAA0CjI,mBAAS,MAAKkI,EAAAhI,YAAA+H,EAAA,GAAjDmS,EAAalS,EAAA,GAAEmS,EAAgBnS,EAAA,GACtC+E,EAA8CjN,mBAAS,IAAGkN,EAAAhN,YAAA+M,EAAA,GAAnDqN,EAAepN,EAAA,GAAEqN,EAAkBrN,EAAA,GAG1C2G,EAAkC7T,oBAAS,GAAM8T,EAAA5T,YAAA2T,EAAA,GAA1C2G,EAAS1G,EAAA,GAAE2G,EAAY3G,EAAA,GAC9B4G,EAAwC1a,mBAAS,MAAK2a,EAAAza,YAAAwa,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAsC9a,mBAAS,IAAG+a,EAAA7a,YAAA4a,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAG5B/C,EAAYC,sBAAWvX,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEHpC,EAASqC,IAAI,cAADgD,OAAeyB,EAAE,MAAK,KAAD,EAAA/E,EAAAG,EAAAI,KAAhDN,EAAID,EAAJC,KACR+V,EAAY,CACV5N,MAAOnI,EAAKmI,MACZwF,YAAa3N,EAAK2N,YAClBE,SAAUwK,GAAmBrY,EAAK6N,UAClCZ,SAAUjN,EAAKiN,SACfF,MAAO/M,EAAK+M,MACZa,SAAU5N,EAAK4N,SACfkI,MAAO,KAETsD,EAAapZ,EAAK8V,OAAS,IAAI5V,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE/B+V,MAAM,kCAAkC,yBAAA/V,EAAAM,OAAA,GAAAV,EAAA,kBAEzC,CAACgF,EAAIiR,IAERvW,qBAAU,WACRyX,GACF,GAAG,CAACA,IAGJ,IAAMkD,EAAa,eAAAza,EAAAC,YAAAC,cAAAC,MAAG,SAAAsQ,IAAA,IAAAiK,EAAA9N,EAAAtM,EAAA,OAAAJ,cAAAK,MAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,OACsB,GAApCga,EAAclF,EAASY,MAAMuE,OAClB,CAADjK,EAAAhQ,KAAA,eAAAgQ,EAAAkK,OAAA,wBAAAlK,EAAAjQ,KAAA,EAAAiQ,EAAAhQ,KAAA,EAGSpC,EAAS4E,KAAK,cAAe,CAClD+J,KAAMkJ,EACNU,KAAM6D,IACL,KAAD,EAAA9N,EAAA8D,EAAA9P,KAHMN,EAAIsM,EAAJtM,KAIRoZ,GAAa,SAACjZ,GAAI,SAAAkD,OAAAyL,aAAS3O,GAAI,CAAEH,GAAO,IACxC+V,GAAY,SAAC5V,GAAI,OAAAqF,wBAAA,GAAWrF,GAAI,IAAE2V,MAAO,IAAE,IAAK1F,EAAAhQ,KAAA,iBAAAgQ,EAAAjQ,KAAA,GAAAiQ,EAAA7P,GAAA6P,EAAA,SAEhD6F,MAAM,sBAAsB,yBAAA7F,EAAA5P,OAAA,GAAA2P,EAAA,mBAE/B,kBAdkB,OAAAzQ,EAAAe,MAAA,KAAAC,UAAA,KAiBb6Z,EAAiB,eAAA5W,EAAAhE,YAAAC,cAAAC,MAAG,SAAA6Q,IAAA,OAAA9Q,cAAAK,MAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,cAAAyQ,EAAA1Q,KAAA,EAAA0Q,EAAAzQ,KAAA,EAEhBpC,EAASuS,OAAO,cAADlN,OAAewW,EAAY,MAAK,KAAD,EACpDT,GAAa,SAACjZ,GAAI,OAAKA,EAAKqQ,QAAO,SAAC6F,GAAI,OAAKA,EAAKvR,KAAO+U,CAAY,GAAC,IACtEH,GAAa,GACbI,EAAgB,MAAMjJ,EAAAzQ,KAAA,gBAAAyQ,EAAA1Q,KAAA,EAAA0Q,EAAAtQ,GAAAsQ,EAAA,SAEtBqJ,EAAe,0BACfR,GAAa,GAAO,yBAAA7I,EAAArQ,OAAA,GAAAkQ,EAAA,kBAEvB,kBAVsB,OAAA/M,EAAAlD,MAAA,KAAAC,UAAA,KAmBjB8Z,EAAc,eAAA5W,EAAAjE,YAAAC,cAAAC,MAAG,SAAA4a,IAAA,OAAA7a,cAAAK,MAAA,SAAAya,GAAA,cAAAA,EAAAva,KAAAua,EAAAta,MAAA,cAAAsa,EAAAva,KAAA,EAAAua,EAAAta,KAAA,EAEbpC,EAASgT,IAAI,cAAD3N,OAAegW,EAAa,KAAK,CACjD1M,KAAMkJ,EACNU,KAAMgD,IACL,KAAD,EACFH,GAAa,SAACjZ,GAAI,OAChBA,EAAKgL,KAAI,SAACkL,GAAI,OACZA,EAAKvR,KAAOuU,EAAa7T,wBAAA,GAAQ6Q,GAAI,IAAEE,KAAMgD,IAAoBlD,CAAI,GACtE,IAEHiD,EAAiB,MACjBE,EAAmB,IAAIkB,EAAAta,KAAA,gBAAAsa,EAAAva,KAAA,EAAAua,EAAAna,GAAAma,EAAA,SAEvBzE,MAAM,yBAAyB,yBAAAyE,EAAAla,OAAA,GAAAia,EAAA,kBAElC,kBAhBmB,OAAA7W,EAAAnD,MAAA,KAAAC,UAAA,KAkBpB,OACEsC,eAACqB,IAAS,CAAClB,UAAU,OAAMpE,SAAA,CACzB0C,cAAA,MAAA1C,SAAI,cACJ0C,cAACwT,GAAQ,CACPC,SAAUA,EACVrL,aAAcA,EACdsL,aAAcA,EACdnL,aAAcA,EACdoL,WAAYA,GACZC,YAAU,IAGZ5T,cAAA,MAAI0B,UAAU,OAAMpE,SAAC,UACrBiE,eAACyH,IAAKE,MAAK,CAACxH,UAAU,OAAOyH,UAAU,QAAO7L,SAAA,CAC5C0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,eACZ0C,cAACgJ,IAAKK,QAAO,CACXzE,GAAG,WACHoP,KAAM,EACN1L,KAAK,QACLpI,MAAOuT,EAASY,MAChB5K,SAAUrB,IAEZpI,cAACoF,IAAM,CAAC1D,UAAU,OAAOU,QAASsW,EAAcpb,SAAC,gBAKnD0C,cAACkZ,KAAS,CAAA5b,SACPoa,EAAUhO,KAAI,SAACkL,GAAI,OAClB5U,cAACkZ,KAAU5G,KAAI,CAAAhV,SACZsa,IAAkBhD,EAAKvR,GACtB9B,eAAAU,WAAA,CAAA3E,SAAA,CACE0C,cAACgJ,IAAKK,QAAO,CACXzE,GAAG,WACHoP,KAAM,EACN9T,MAAO4X,EACPrO,SAAU,SAACkC,GAAC,OAAKoM,EAAmBpM,EAAE/K,OAAOV,MAAM,IAErDqB,eAAA,OAAKG,UAAU,gBAAepE,SAAA,CAC5B0C,cAACoF,IAAM,CAACC,QAAQ,UAAUN,KAAK,KAAKrD,UAAU,OAAOU,QAAS2W,EAAezb,SAAC,SAG9E0C,cAACoF,IAAM,CAACC,QAAQ,YAAYN,KAAK,KAAK3C,QAAS,kBAAMyV,EAAiB,KAAK,EAACva,SAAC,iBAMjFiE,eAAAU,WAAA,CAAA3E,SAAA,CACE0C,cAAA,OAAA1C,SAAMsX,EAAKE,OACXvT,eAAA,OAAKG,UAAU,gBAAepE,SAAA,CAC5B0C,cAACoF,IAAM,CACLC,QAAQ,kBACRN,KAAK,KACLrD,UAAU,OACVU,QAAS,kBA/EH+W,EA+EwBvE,EAAKvR,GA/ErB+V,EA+EyBxE,EAAKE,KA9E5D+C,EAAiBsB,QACjBpB,EAAmBqB,GAFE,IAACD,EAAQC,CA+EmC,EAAC9b,SACnD,SAGD0C,cAACoF,IAAM,CACLC,QAAQ,iBACRN,KAAK,KACL3C,QAAS,WACPiW,EAAgBzD,EAAKvR,IACrB4U,GAAa,EACf,EAAE3a,SACH,kBArCYsX,EAAKvR,GA2CT,MAKrBrD,cAACoW,GAAkB,CACjBC,KAAM2B,EACN1B,OAAQ,kBAAM2B,GAAa,EAAM,EACjC1B,UAAWuC,EACXvZ,MAAOiZ,MAIf,E,UC9Jea,GApCM,WACnB,IAAA9b,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B8W,EAAK5W,EAAA,GAAE6X,EAAQ7X,EAAA,GACtBgI,EAA8BjI,oBAAS,GAAKkI,EAAAhI,YAAA+H,EAAA,GAArC6T,EAAO5T,EAAA,GAAE6T,EAAU7T,EAAA,GAC1B+E,EAA0BjN,mBAAS,MAAKkN,EAAAhN,YAAA+M,EAAA,GAAjClL,EAAKmL,EAAA,GAAE6K,EAAQ7K,EAAA,GA8BtB,OA5BA3M,qBAAU,WACR,IAAIyb,GAAY,EAEVC,EAAU,eAAApc,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAiQ,EAAA/P,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGpC,EAASqC,IAAI,eAAe,KAAD,EAAvC0P,EAAG7P,EAAAI,KACHN,EAAO+P,EAAI/P,KAAKgI,SAAW+H,EAAI/P,KACjCib,IACFlE,EAAS/W,GACTgb,GAAW,GACXhE,EAAS,OACV9W,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEG+a,IACFjE,EAAS,iDACTgE,GAAW,IACZ,yBAAA9a,EAAAM,OAAA,GAAAV,EAAA,kBAEJ,kBAfe,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAmBhB,OAFAwa,IAEO,WACLD,GAAY,CACd,CACF,GAAG,IAGI,CAAEnF,QAAOiB,WAAUgE,UAAS/Z,QAAOgW,WAC5C,ECDemE,OA/Bf,SAAiBrc,GAAY,IAATuX,EAAIvX,EAAJuX,KAClB,OACE5U,cAACyE,IAAI,CAAC/C,UAAWG,KAAOgT,SAAUxS,KAAK,UAAUsX,SAAS,IAAGrc,SAC3DiE,eAACkD,IAAKC,KAAI,CAAChD,UAAU,6CAA4CpE,SAAA,CAC/DiE,eAAA,OAAAjE,SAAA,CACEiE,eAACkD,IAAKE,MAAK,CAACjD,UAAWG,KAAO+X,UAAUtc,SAAA,CACtC0C,cAAA,KAAG0B,UAAU,yCACb1B,cAACmF,IAAI,CAAC1D,GAAE,UAAAG,OAAYgT,EAAKvR,IAAM3B,UAAWG,KAAOgY,SAASvc,SACvDsX,EAAKE,KAAKxO,OAAS,GAChBsO,EAAKE,KAAKgF,UAAU,EAAG,IAAM,MAC7BlF,EAAKE,UAIbvT,eAACkD,IAAKS,KAAI,CAACxD,UAAU,uCAAsCpE,SAAA,CACzD0C,cAAA,KAAG0B,UAAU,sBACb1B,cAACmF,IAAI,CAAC1D,GAAE,UAAAG,OAAYgT,EAAK1J,KAAK7H,IAAM3B,UAAWG,KAAOkY,SAASzc,SAC5DsX,EAAK1J,KAAKxE,cAKjBnF,eAAA,SAAOG,UAAWG,KAAOkT,UAAUzX,SAAA,CACjC0C,cAAA,KAAG0B,UAAU,sBACZ,IAAI2N,KAAKuF,EAAKI,YAAYE,wBAKrC,EC4Be8E,OAhDf,WACE,IAAAC,EAAkCZ,KAA1BhF,EAAK4F,EAAL5F,MAAOiF,EAAOW,EAAPX,QAAS/Z,EAAK0a,EAAL1a,MAExB,OAAI+Z,EAEA/X,eAACqB,IAAS,CAAClB,UAAU,mBAAkBpE,SAAA,CACrC0C,cAACka,KAAO,CAACC,UAAU,WACnBna,cAAA,KAAA1C,SAAG,wBAMPiE,eAACqB,IAAS,CAAClB,UAAWG,KAAOuY,kBAAkB9c,SAAA,CAE7CiE,eAAA,OAAKG,UAAWG,KAAOwY,UAAU/c,SAAA,CAC/BiE,eAAA,MAAIG,UAAWG,KAAOyY,UAAUhd,SAAA,CAC9B0C,cAAA,KAAG0B,UAAU,4BAA8B,WAE7CH,eAAC6D,IAAM,CACL1D,UAAWG,KAAO0Y,cAClB3V,GAAIO,IACJ1D,GAAG,gBACH4D,QAAQ,UAAS/H,SAAA,CAEjB0C,cAAA,KAAG0B,UAAU,qBAAuB,kBAKvCnC,GAASS,cAAC6J,IAAK,CAACxE,QAAQ,SAAQ/H,SAAEiC,IAGjB,IAAjB8U,EAAM/N,OACLtG,cAAA,KAAG0B,UAAWG,KAAO2Y,YAAYld,SAAC,yCAElC0C,cAACqE,IAAG,CAACoW,GAAI,EAAGC,GAAI,EAAGnW,GAAI,EAAGC,GAAI,EAAG9C,UAAU,MAAKpE,SAC7C+W,EAAM3K,KAAI,SAACkL,GAAI,OACd5U,cAACsE,IAAG,CAAAhH,SACF0C,cAAC0Z,GAAQ,CAAC9E,KAAMA,KADRA,EAAKvR,GAET,QAMlB,E,oBC6BesX,OAnFf,WACE,IAAQtX,EAAO+R,cAAP/R,GACR9F,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BqX,EAAInX,EAAA,GAAEmd,EAAOnd,EAAA,GACpBgI,EAA8BjI,oBAAS,GAAKkI,EAAAhI,YAAA+H,EAAA,GAArC6T,EAAO5T,EAAA,GAAE6T,EAAU7T,EAAA,GAC1B+E,EAA0BjN,mBAAS,MAAKkN,EAAAhN,YAAA+M,EAAA,GAAjClL,EAAKmL,EAAA,GAAE6K,EAAQ7K,EAAA,GAgBtB,OAdA3M,qBAAU,WACR,IAAM8c,EAAS,eAAAxd,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESpC,EAASqC,IAAI,cAADgD,OAAeyB,EAAE,MAAK,KAAD,EAAA/E,EAAAG,EAAAI,KAAhDN,EAAID,EAAJC,KACRqc,EAAQrc,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEd8W,EAAS,yBAAyB,QAEhB,OAFgB9W,EAAAC,KAAA,GAElC6a,GAAW,GAAO9a,EAAAqc,OAAA,6BAAArc,EAAAM,OAAA,GAAAV,EAAA,wBAErB,kBATc,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAUf4b,GACF,GAAG,CAACxX,IAEAiW,EAEA/X,eAACqB,IAAS,CAAClB,UAAU,mBAAmB,YAAU,SAAQpE,SAAA,CACxD0C,cAACka,KAAO,CAACC,UAAU,SAAS9X,KAAK,SAAS,aAAW,iBACrDrC,cAAA,KAAA1C,SAAG,uBAKLiC,EAEAS,cAAC4C,IAAS,CAAClB,UAAU,OAAO,YAAU,SAAQpE,SAC5C0C,cAAA,KAAG0B,UAAU,cAAapE,SAAEiC,MAK7BqV,EASH5U,cAAC4C,IAAS,CAAClB,UAAWG,KAAOkZ,kBAAkBzd,SAC7C0C,cAACyE,IAAI,CAAAnH,SACHiE,eAACkD,IAAKC,KAAI,CAAApH,SAAA,CACRiE,eAACkD,IAAKE,MAAK,CAAArH,SAAA,CAAC,WACD,IACRsX,EAAK1J,KACJlL,cAACmF,IAAI,CAAC1D,GAAE,UAAAG,OAAYgT,EAAK1J,KAAK7H,IAAM,4BAAAzB,OAA2BgT,EAAK1J,KAAKxE,OAAQpJ,SAC9EsX,EAAK1J,KAAKxE,QAGb,kBAGJ1G,cAACyE,IAAKS,KAAI,CAAA5H,SAAEsX,EAAKE,OACjB9U,cAAA,SACAuB,eAAA,KAAAjE,SAAA,CACE0C,cAAA,UAAA1C,SAAQ,gBAAqB,IAC5B,IAAI+R,KAAKuF,EAAKI,YAAYE,oBAE7B3T,eAAA,KAAAjE,SAAA,CACE0C,cAAA,UAAA1C,SAAQ,kBAAuB,IAC9B,IAAI+R,KAAKuF,EAAKoG,cAAc9F,oBAE/B3T,eAAA,OAAKG,UAAU,iCAAgCpE,SAAA,CAC7C0C,cAACmF,IAAI,CAAC1D,GAAE,UAAAG,OAAYyB,EAAE,SAAS3B,UAAU,kBAAkB,aAAW,iBAAgBpE,SAAC,cAGvF0C,cAACmF,IAAI,CAAC1D,GAAE,UAAAG,OAAYyB,EAAE,WAAW3B,UAAU,iBAAiB,aAAW,mBAAkBpE,SAAC,0BAlChG0C,cAAC4C,IAAS,CAAClB,UAAU,OAAMpE,SACzB0C,cAAA,KAAA1C,SAAG,qBAyCX,ECbe2d,OAvEf,SAAiB5d,GAMb,IAAD6d,EAAA7d,EALD8d,mBAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAA/d,EAChBge,mBAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAAje,EAChB6Q,aAAK,IAAAoN,EAAG,GAAEA,EACVrS,EAAQ5L,EAAR4L,SAAQsS,EAAAle,EACRme,mBAAW,IAAAD,EAAG,SAAQA,EAGtBhe,EAAwBC,mBAAS2d,GAAY1d,EAAAC,YAAAH,EAAA,GAAtCuX,EAAIrX,EAAA,GAAEge,EAAOhe,EAAA,GACpBgI,EAAwCjI,mBAAS6d,GAAY3V,EAAAhI,YAAA+H,EAAA,GAAtDiW,EAAYhW,EAAA,GAAEiW,EAAejW,EAAA,GACpC+E,EAA0BjN,mBAAS,MAAKkN,EAAAhN,YAAA+M,EAAA,GAAjClL,EAAKmL,EAAA,GAAE6K,EAAQ7K,EAAA,GAoBtB,OAjBA3M,qBAAU,WACR0d,EAAQN,GACRQ,EAAgBN,EAClB,GAAG,CAACF,EAAaE,IAef9Z,eAACyH,IAAI,CAACC,SAZa,SAAC0C,GACpBA,EAAElD,iBACGiT,GAAiB5G,GAItBS,EAAS,MAETtM,EAAS,CAAEiC,KAAMwQ,EAAc5G,UAL7BS,EAAS,4BAMb,EAG+BjY,SAAA,CAE1BiC,GAASS,cAAA,KAAG0B,UAAU,cAAapE,SAAEiC,IAGtCgC,eAACyH,IAAKE,MAAK,CAACC,UAAU,OAAOzH,UAAU,OAAMpE,SAAA,CAC3C0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,SACZiE,eAACyH,IAAKK,QAAO,CACXzE,GAAG,SACH1E,MAAOwb,EACPjS,SAAU,SAACkC,GAAC,OAAKgQ,EAAgBhQ,EAAE/K,OAAOV,MAAM,EAChD6T,UAAQ,EAAAzW,SAAA,CAER0C,cAAA,UAAQE,MAAM,GAAE5C,SAAC,kBAChB4Q,EAAMxE,KAAI,SAACwB,GAAI,OACdlL,cAAA,UAAsBE,MAAOgL,EAAK7H,GAAG/F,SAClC4N,EAAKxE,OADKwE,EAAK7H,GAET,UAMf9B,eAACyH,IAAKE,MAAK,CAACC,UAAU,OAAOzH,UAAU,OAAMpE,SAAA,CAC3C0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,cACZ0C,cAACgJ,IAAKK,QAAO,CACXzE,GAAG,WACHoP,KAAM,EACN9T,MAAO4U,EACPrL,SAAU,SAACkC,GAAC,OAAK8P,EAAQ9P,EAAE/K,OAAOV,MAAM,EACxC6T,UAAQ,OAKZ/T,cAACoF,IAAM,CAACmE,KAAK,SAAQjM,SAAEke,MAG7B,ECEeI,GAvEK,WAAoB,IAAnBzC,EAAMla,UAAAqH,OAAA,QAAA+M,IAAApU,UAAA,GAAAA,UAAA,GAAG,KAE5B1B,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BuX,EAAIrX,EAAA,GAAEge,EAAOhe,EAAA,GAEpBgI,EAAwCjI,mBAAS,IAAGkI,EAAAhI,YAAA+H,EAAA,GAA7CiW,EAAYhW,EAAA,GAAEiW,EAAejW,EAAA,GAEpC+E,EAA0BjN,mBAAS,IAAGkN,EAAAhN,YAAA+M,EAAA,GAA/ByD,EAAKxD,EAAA,GAAEyD,EAAQzD,EAAA,GAEtB2G,EAA4B7T,mBAAS,MAAK8T,EAAA5T,YAAA2T,EAAA,GAAnCnJ,EAAMoJ,EAAA,GAAEnJ,EAASmJ,EAAA,GAExB4G,EAA4C1a,mBAAS,MAAK2a,EAAAza,YAAAwa,EAAA,GAAnDvN,EAAcwN,EAAA,GAAEvN,EAAiBuN,EAAA,GAExCG,EAA8B9a,oBAAS,GAAM+a,EAAA7a,YAAA4a,EAAA,GAAtCgB,EAAOf,EAAA,GAAEgB,EAAUhB,EAAA,GA6C1B,OA1CAxa,qBAAU,WACR,IAAMsQ,EAAU,eAAAhR,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQpC,EAASqC,IAAI,eAAe,KAAD,EAAAN,EAAAG,EAAAI,KAA1CN,EAAID,EAAJC,KACR4P,EAAS5P,EAAKgI,UACT4S,GAAU5a,EAAKgI,QAAQD,OAAS,GACnCqV,EAAgBpd,EAAKgI,QAAQ,GAAGlD,GAAGgU,YACpC5Y,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAED0J,EAAU,CAAE+C,KAAM,0BAA2B,yBAAAzM,EAAAM,OAAA,GAAAV,EAAA,kBAEhD,kBAVe,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAWhBoP,GACF,GAAG,CAAC8K,IAGJpb,qBAAU,WACR,GAAKob,EAAL,CACAI,GAAW,GACX,IAAMsB,EAAS,eAAA5c,EAAAC,YAAAC,cAAAC,MAAG,SAAAsQ,IAAA,IAAAmN,EAAAtd,EAAA,OAAAJ,cAAAK,MAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAAhQ,KAAA,EAESpC,EAASqC,IAAI,cAADgD,OAAeuX,EAAM,MAAK,KAAD,EAAA0C,EAAAlN,EAAA9P,KAApDN,EAAIsd,EAAJtd,KACRkd,EAAQld,EAAKuW,MACb6G,EAAgBpd,EAAK2M,KAAK7H,GAAGgU,YAC7BlP,EAAU,MAAMwG,EAAAhQ,KAAA,iBAAAgQ,EAAAjQ,KAAA,GAAAiQ,EAAA7P,GAAA6P,EAAA,SAEhBxG,EAAU,CAAE2T,MAAO,yBAA0B,QAE3B,OAF2BnN,EAAAjQ,KAAA,GAE7C6a,GAAW,GAAO5K,EAAAmM,OAAA,6BAAAnM,EAAA5P,OAAA,GAAA2P,EAAA,yBAErB,kBAXc,OAAAzQ,EAAAe,MAAA,KAAAC,UAAA,KAYf4b,GAdmB,CAerB,GAAG,CAAC1B,IAGJpb,qBAAU,WACR,GAAI4M,EAAgB,CAClB,IAAMoR,EAAQhR,YAAW,kBAAMH,EAAkB,KAAK,GAAE,KACxD,OAAO,kBAAMoR,aAAaD,EAAO,CACnC,CACF,GAAG,CAACpR,IAEG,CACLmK,OACA2G,UACAC,eACAC,kBACAzN,QACAhG,SACAC,YACAwC,iBACAC,oBACA0O,UAEJ,EClBe2C,OA/Cf,WACE,IAAMpe,EAAUC,cAGhBoe,EAOIN,KANF1N,EAAKgO,EAALhO,MACAhG,EAAMgU,EAANhU,OACAC,EAAS+T,EAAT/T,UACAwC,EAAcuR,EAAdvR,eACAC,EAAiBsR,EAAjBtR,kBACA0O,EAAO4C,EAAP5C,QAII6C,EAAY,eAAA9e,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,EAAOoV,GAAQ,IAAAjL,EAAA,OAAArK,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE1BpC,EAAS4E,KAAK,cAAesS,GAAU,KAAD,EAC5C7I,EAAkB,8BAClBzC,EAAU,MACV4C,YAAW,kBAAMlN,EAAQiC,KAAK,UAAD8B,OAAW6R,EAASvI,MAAO,GAAE,MAAMzM,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhE0J,EAAU,CAAEiU,OAAQ,6CACpBxR,EAAkB,MAClBxJ,QAAQ7B,OAAkB,QAAZiJ,EAAA/J,EAAAK,GAAIa,gBAAQ,IAAA6I,OAAA,EAAZA,EAAcjK,OAAIE,EAAAK,IAAS,yBAAAL,EAAAM,OAAA,GAAAV,EAAA,kBAE5C,gBAXiBqK,GAAA,OAAArL,EAAA2B,MAAA,KAAAC,UAAA,KAalB,OACEsC,eAACqB,IAAS,CAAClB,UAAU,OAAMpE,SAAA,CACzB0C,cAAA,MAAA1C,SAAI,cAGG,OAAN4K,QAAM,IAANA,OAAM,EAANA,EAAQkU,SAAUpc,cAAC6J,IAAK,CAACxE,QAAQ,SAAQ/H,SAAE4K,EAAOkU,SAClDzR,GAAkB3K,cAAC6J,IAAK,CAACxE,QAAQ,UAAS/H,SAAEqN,IAE7C3K,cAACib,GAAQ,CACP/M,MAAOA,EACPjF,SAAUkT,EACVX,YAAY,WACZjc,MAAa,OAAN2I,QAAM,IAANA,OAAM,EAANA,EAAQmU,KACf1R,eAAgBA,EAChB2O,QAASA,MAIjB,ECcegD,OA3Df,WACE,IAAQjZ,EAAO+R,cAAP/R,GACFxF,EAAUC,cAGhBoe,EAOIN,GAAYvY,GANdyR,EAAIoH,EAAJpH,KACA4G,EAAYQ,EAAZR,aACAxN,EAAKgO,EAALhO,MACAhG,EAAMgU,EAANhU,OACAC,EAAS+T,EAAT/T,UACAmR,EAAO4C,EAAP5C,QAIF/b,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnDoN,EAAclN,EAAA,GAAEmN,EAAiBnN,EAAA,GAMlC8K,EAAY,eAAAtK,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAAhB,GAAA,IAAA6N,EAAA4J,EAAAtM,EAAA,OAAArK,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAmB,OAAVuM,EAAI7N,EAAJ6N,KAAM4J,EAAIzX,EAAJyX,KAAIrW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE9BpC,EAASgT,IAAI,cAAD3N,OAAeyB,EAAE,KAAK,CAAE6H,OAAM4J,SAAQ,KAAD,EACvDlK,EAAkB,8BAClBzC,EAAU,MAGV4C,YAAW,kBAAMlN,EAAQiC,KAAK,UAAD8B,OAAWsJ,GAAO,GAAE,MAAMzM,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvD0J,EAAU,CAAE2M,KAAM,2BAClBlK,EAAkB,MAClBxJ,QAAQ7B,OAAkB,QAAZiJ,EAAA/J,EAAAK,GAAIa,gBAAQ,IAAA6I,OAAA,EAAZA,EAAcjK,OAAIE,EAAAK,IAAS,yBAAAL,EAAAM,OAAA,GAAAV,EAAA,kBAE5C,gBAbiBqK,GAAA,OAAAzK,EAAAe,MAAA,KAAAC,UAAA,KAelB,OACEsC,eAACqB,IAAS,CAAClB,UAAU,OAAMpE,SAAA,CACzB0C,cAAA,MAAA1C,SAAI,cAGH4K,GAAUA,EAAO4M,MAAQ9U,cAAC6J,IAAK,CAACxE,QAAQ,SAAQ/H,SAAE4K,EAAO4M,OACzDnK,GAAkB3K,cAAC6J,IAAK,CAACxE,QAAQ,UAAS/H,SAAEqN,IAG7C3K,cAACib,GAAQ,CACPE,YAAarG,EACbuG,YAAaK,EACbxN,MAAOA,EACPhG,OAAQA,EACRe,SAAUV,EACV+Q,QAASA,EACT3O,eAAgBA,EAChB6Q,YAAY,kBAIpB,ECZee,OA/Cf,WACE,IAAQlZ,EAAO+R,cAAP/R,GACFxF,EAAUC,cAChBP,EAA0BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjCgC,EAAK9B,EAAA,GAAE8X,EAAQ9X,EAAA,GACtBgI,EAA4BjI,mBAAS,MAAKkI,EAAAhI,YAAA+H,EAAA,GAAnC2O,EAAM1O,EAAA,GAAE8W,EAAS9W,EAAA,GAExB3H,qBAAU,WACR,IAAM8c,EAAS,eAAAxd,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESpC,EAASqC,IAAI,cAADgD,OAAeyB,EAAE,MAAK,KAAD,EAAA/E,EAAAG,EAAAI,KAAhDN,EAAID,EAAJC,KACRie,EAAUje,EAAK2M,KAAK7H,IAAI5E,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAExB8W,EAAS,wBAAwB,yBAAA9W,EAAAM,OAAA,GAAAV,EAAA,kBAEpC,kBAPc,OAAAhB,EAAA2B,MAAA,KAAAC,UAAA,KAQf4b,GACF,GAAG,CAACxX,IAEJ,IAAMqS,EAAY,eAAAzX,EAAAC,YAAAC,cAAAC,MAAG,SAAAsQ,IAAA,OAAAvQ,cAAAK,MAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAAhQ,KAAA,EAEXpC,EAASuS,OAAO,cAADlN,OAAeyB,EAAE,MAAK,KAAD,EAEtC+Q,EACFvW,EAAQiC,KAAK,UAAD8B,OAAWwS,IAEvBvW,EAAQiC,KAAK,UACd6O,EAAAhQ,KAAA,eAAAgQ,EAAAjQ,KAAA,EAAAiQ,EAAA7P,GAAA6P,EAAA,SAED4G,EAAS,0BAA0B,wBAAA5G,EAAA5P,OAAA,GAAA2P,EAAA,kBAEtC,kBAZiB,OAAAzQ,EAAAe,MAAA,KAAAC,UAAA,KAclB,OACEsC,eAACqB,IAAS,CAAClB,UAAU,OAAMpE,SAAA,CACzB0C,cAAA,MAAA1C,SAAI,gBACHiC,GAASS,cAAC6J,IAAK,CAACxE,QAAQ,SAAQ/H,SAAEiC,IACnCS,cAAA,KAAA1C,SAAG,+CACH0C,cAACoF,IAAM,CAACC,QAAQ,SAASjD,QAASsT,EAAchU,UAAU,OAAMpE,SAAC,WAGjE0C,cAACoF,IAAM,CAACC,QAAQ,YAAYjD,QAAS,kBAAMvE,EAAQ4e,QAAQ,EAACnf,SAAC,aAKnE,E,oBCoDeof,OAhGf,WAEE,IAAAnf,EAAgCC,mBAAS,CACvCmf,QAAS,GACTC,QAAS,KACTnf,EAAAC,YAAAH,EAAA,GAHKkW,EAAQhW,EAAA,GAAE6W,EAAW7W,EAAA,GAM5BgI,EAA8BjI,oBAAS,GAAMkI,EAAAhI,YAAA+H,EAAA,GAAtC6T,EAAO5T,EAAA,GAAE6T,EAAU7T,EAAA,GAC1B+E,EAA0BjN,mBAAS,MAAKkN,EAAAhN,YAAA+M,EAAA,GAAjClL,EAAKmL,EAAA,GAAE6K,EAAQ7K,EAAA,GACtB2G,EAA8B7T,mBAAS,MAAK8T,EAAA5T,YAAA2T,EAAA,GAArCwL,EAAOvL,EAAA,GAAEwL,EAAUxL,EAAA,GAGpBlJ,EAAe,SAACuD,GACpB2I,GAAY,SAAC5V,GAAI,OAAAqF,wBAAA,GACZrF,GAAI,GAAA2J,YAAA,GACNsD,EAAE/K,OAAO0H,KAAOqD,EAAE/K,OAAOV,OAAK,GAEnC,EAGMqI,EAAY,eAAAlL,EAAAa,YAAAC,cAAAC,MAAG,SAAAC,EAAOsN,GAAC,OAAAxN,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIV,OAHjBgN,EAAElD,iBACF8Q,GAAW,GACXhE,EAAS,MACTuH,EAAW,MAAMre,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAITpC,EAAS4E,KAAK,gBAAiBsS,GAAU,KAAD,EAC9Ca,EAAY,CAAEqI,QAAS,GAAIC,QAAS,KACpCE,EAAW,iBAAiBre,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAE5B2C,QAAQ7B,MAAKd,EAAAK,IACbyW,EAAS,2BAA2B,QAElB,OAFkB9W,EAAAC,KAAA,GAEpC6a,GAAW,GAAO9a,EAAAqc,OAAA,6BAAArc,EAAAM,OAAA,GAAAV,EAAA,yBAErB,gBAjBiBqK,GAAA,OAAArL,EAAA2B,MAAA,KAAAC,UAAA,KAmBlB,OACEe,cAAC4C,IAAS,CAAClB,UAAWG,KAAOkb,iBAAiBzf,SAC5C0C,cAACqE,IAAG,CAAC3C,UAAU,yBAAwBpE,SACrCiE,eAAC+C,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAElH,SAAA,CAEhB0C,cAAA,MAAI0B,UAAWG,KAAOmb,aAAa1f,SAAC,iBAGnCiC,GAASS,cAAA,OAAK0B,UAAWG,KAAOob,aAAa3f,SAAEiC,IAC/Csd,GAAW7c,cAAA,OAAK0B,UAAWG,KAAO8I,eAAerN,SAAEuf,IAGpDtb,eAACyH,IAAI,CAACC,SAAUV,EAAajL,SAAA,CAE3BiE,eAACyH,IAAKE,MAAK,CAACC,UAAU,iBAAiBzH,UAAWG,KAAOqb,UAAU5f,SAAA,CACjE0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,YACZ0C,cAACgJ,IAAKK,QAAO,CACXE,KAAK,OACLjB,KAAK,UACLpI,MAAOuT,EAASkJ,QAChBlT,SAAUrB,EACVoB,YAAY,gBACZuK,UAAQ,OAKZxS,eAACyH,IAAKE,MAAK,CAACC,UAAU,iBAAiBzH,UAAS,GAAAE,OAAKC,KAAOqb,UAAS,SAAQ5f,SAAA,CAC3E0C,cAACgJ,IAAKI,MAAK,CAAA9L,SAAC,YACZ0C,cAACgJ,IAAKK,QAAO,CACXzE,GAAG,WACH0D,KAAK,UACL0L,KAAM,EACN9T,MAAOuT,EAASmJ,QAChBnT,SAAUrB,EACVoB,YAAY,6BACZuK,UAAQ,OAKZ/T,cAACoF,IAAM,CACLC,QAAQ,UACRkE,KAAK,SACL7H,UAAWG,KAAOsb,aAClB/J,SAAUkG,EAAQhc,SAEjBgc,EAAU,aAAe,0BAOxC,EChBe8D,OAnDf,WACE,IAAMzf,EAAcV,IAGdogB,EAAsC,MAF3BC,cAEcC,WAAqB5f,EAMpD,OAJAI,qBAAU,WACR8C,SAASiU,KAAK0I,UAAUC,OAAO,YAAaJ,EAC9C,GAAG,CAACA,IAGF9b,eAAA,OAAKG,UAAWG,IAAOub,IAAI9f,SAAA,CACzB0C,cAACgB,EAAM,IAENqc,EACCrd,cAACmE,EAAW,IAEZnE,cAAC4C,IAAS,CAAClB,UAAWG,IAAO6b,KAAKpgB,SAChCiE,eAACoc,IAAM,CAAArgB,SAAA,CAEL0C,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,IAAIna,UAAW4B,IAGxCtF,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,SAASna,UAAWsK,KAC7ChO,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,gBAAgBna,UAAWmS,KACpD7V,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,aAAana,UAAWyR,KACjDnV,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,kBAAkBna,UAAW8T,KAGtDxX,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,SAASna,UAAWsW,KAC7Cha,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,gBAAgBna,UAAWuY,KACpDjc,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,aAAana,UAAWiX,KACjD3a,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,kBAAkBna,UAAW4Y,KACtDtc,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,oBAAoBna,UAAW6Y,KAGxDvc,cAACwD,EAAY,CAACoa,OAAK,EAACC,KAAK,WAAWna,UAAWgZ,KAG/C1c,cAAC8D,IAAK,CAAC8Z,OAAK,EAACC,KAAK,UAAUna,UAAW2G,KACvCrK,cAAC8D,IAAK,CAAC8Z,OAAK,EAACC,KAAK,UAAUna,UAAW4D,KAGvCtH,cAAC8D,IAAK,CAACE,OAAQ,kBAAMhE,cAAA,KAAA1C,SAAG,mBAAmB,WAMvD,ECtEewgB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA5gB,GAAkD,IAA/C6gB,EAAM7gB,EAAN6gB,OAAQC,EAAM9gB,EAAN8gB,OAAQC,EAAM/gB,EAAN+gB,OAAQC,EAAMhhB,EAANghB,OAAQC,EAAOjhB,EAAPihB,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECFAQ,IAASva,OACPhE,cAACgW,IAAMwI,WAAU,CAAAlhB,SACf0C,cAACye,IAAM,CAAAnhB,SACL0C,cAAC5C,EAAmB,CAAAE,SAClB0C,cAACod,GAAG,UAIVvc,SAAS6d,eAAe,SAM1BZ,I,qBCrBAa,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,UAAY,0BAA0B,SAAW,yBAAyB,QAAU,wBAAwB,OAAS,uB,qBCArMD,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,aAAe,+BAA+B,iBAAmB,mCAAmC,eAAiB,iC,qBCA3LD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,UAAY,gCAAgC,UAAY,gCAAgC,UAAY,gCAAgC,OAAS,6BAA6B,MAAQ,4BAA4B,KAAO,2B,qBCAvQD,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,gBAAkB,mCAAmC,MAAQ,yBAAyB,SAAW,4BAA4B,aAAe,gCAAgC,SAAW,4BAA4B,KAAO,wBAAwB,aAAe,gCAAgC,YAAc,+BAA+B,WAAa,8BAA8B,aAAe,gC,qBCAjdD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,UAAY,4BAA4B,UAAY,4BAA4B,cAAgB,gCAAgC,YAAc,8BAA8B,SAAW,2BAA2B,UAAY,4BAA4B,SAAW,2BAA2B,SAAW,2BAA2B,UAAY,4B,qBCA5ZD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,QAAU,qBAAqB,KAAO,kBAAkB,YAAc,yBAAyB,UAAY,uBAAuB,YAAc,yBAAyB,UAAU,qBAAqB,gBAAgB,2BAA2B,YAAY,uB,qBCAjUD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,YAAc,4BAA4B,MAAQ,sBAAsB,aAAe,6BAA6B,OAAS,uB,qBCAvOD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,aAAe,kCAAkC,UAAY,+BAA+B,aAAe,kCAAkC,eAAiB,oCAAoC,aAAe,kC,qBCA5RD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,gBAAkB,oCAAoC,aAAe,iCAAiC,YAAc,gC,qBCAhLD,EAAOC,QAAU,CAAC,kBAAoB,sC,qBCAtCD,EAAOC,QAAU,CAAC,kBAAoB,sCAAsC,IAAM,wB","file":"static/js/main.0c165710.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://taskpilot-backend-6ee557f05c5b.herokuapp.com';\n\nexport const axiosReq = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n});\n\nexport const axiosRes = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'multipart/form-data',\n  },\n  withCredentials: true,\n});","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\n\n// Create context\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\n// Custom hooks\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  // Get the current user on app load\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(\"/api/dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        // Not logged in or session expired\n        setCurrentUser(null);\n      }\n    };\n\n    handleMount();\n  }, []);\n\n  // Interceptors\n  useEffect(() => {\n    const requestInterceptor = axiosReq.interceptors.request.use(\n      (config) => config,\n      (error) => Promise.reject(error)\n    );\n\n    const responseInterceptor = axiosRes.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          setCurrentUser(null);\n          history.push(\"/signin\");\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    // Clean up interceptors on unmount\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [history]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};","import { useEffect, useRef, useState } from \"react\";\n\n/**\n * Custom hook to toggle a component (e.g., navbar) and collapse it\n * when a click is detected outside of the target component.\n */\nconst useClickOutsideToggle = () => {\n  // State to track whether the component (e.g., navbar) is expanded or not\n  const [expanded, setExpanded] = useState(false);\n\n  // Ref to be attached to the toggled component for click detection\n  const ref = useRef(null);\n\n  useEffect(() => {\n    // Handler function to detect clicks outside the referenced element\n    const handleClickOutside = (event) => {\n      // If the click was outside the element referred to by `ref`, collapse it\n      if (ref.current && !ref.current.contains(event.target)) {\n        setExpanded(false);\n      }\n    };\n\n    // Add mouseup listener when the component mounts\n    document.addEventListener(\"mouseup\", handleClickOutside);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"mouseup\", handleClickOutside);\n    };\n  }, [ref]); // Effect runs only if ref changes (which it won't, but this is good practice)\n\n  // Return the toggle state, setter, and the ref to attach\n  return { expanded, setExpanded, ref };\n};\n\nexport default useClickOutsideToggle;","import React from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport styles from \"../styles/NavBar.module.css\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useCurrentUser, useSetCurrentUser } from \"../contexts/CurrentUserContext\";\nimport axios from \"axios\";\nimport useClickOutsideToggle from \"../hooks/useClickOutsideToggle\";\n\nconst NavBar = () => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const { expanded, setExpanded, ref } = useClickOutsideToggle();\n  const history = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      await axios.post(\"/api/dj-rest-auth/logout/\");\n      setCurrentUser(null);\n      history.push(\"/signin\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const newTaskIcon = currentUser && (\n    <NavLink\n      to=\"/tasks/create\"\n      className={({ isActive }) =>\n        isActive ? `${styles.navLink} ${styles.Active}` : styles.navLink\n      }\n    >\n      <i className=\"far fa-plus-square\"></i> New Task\n    </NavLink>\n  );\n\n  const loggedInLinks = (\n    <>\n      <NavLink\n        to=\"/tasks\"\n        className={({ isActive }) =>\n          isActive ? `${styles.navLink} ${styles.Active}` : styles.navLink\n        }\n      >\n        <i className=\"fas fa-tasks\"></i> My Tasks\n      </NavLink>\n      <NavLink\n        to=\"/notes\"\n        className={({ isActive }) =>\n          isActive ? `${styles.navLink} ${styles.Active}` : styles.navLink\n        }\n      >\n        <i className=\"fas fa-sticky-note\"></i> Notes\n      </NavLink>\n      <span onClick={handleSignOut} className={styles.navLink} role=\"button\">\n        <i className=\"fas fa-sign-out-alt\"></i> Sign out\n      </span>\n    </>\n  );\n\n  const loggedOutLinks = (\n    <>\n      <NavLink\n        to=\"/signin\"\n        className={({ isActive }) =>\n          isActive ? `${styles.navLink} ${styles.Active}` : styles.navLink\n        }\n      >\n        <i className=\"fas fa-sign-in-alt\"></i> Sign in\n      </NavLink>\n      <NavLink\n        to=\"/signup\"\n        className={({ isActive }) =>\n          isActive ? `${styles.navLink} ${styles.Active}` : styles.navLink\n        }\n      >\n        <i className=\"fas fa-user-plus\"></i> Sign up\n      </NavLink>\n    </>\n  );\n\n  return (\n    <Navbar\n      expanded={expanded}\n      className={styles.NavBar}\n      expand=\"md\"\n      fixed=\"top\"\n    >\n      <Container>\n        <NavLink to=\"/\" className={styles.navLink}>\n          <Navbar.Brand className={styles.brand}>\n            <img src=\"/favicon_io/logo.png\" alt=\"logo\" height=\"45\" />\n            <span className={styles.brandText}>TaskPilot</span>\n          </Navbar.Brand>\n        </NavLink>\n        {newTaskIcon}\n        <Navbar.Toggle\n          ref={ref}\n          onClick={() => setExpanded(!expanded)}\n          aria-controls=\"basic-navbar-nav\"\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto text-left\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) =>\n                isActive ? `${styles.navLink} ${styles.Active}` : styles.navLink\n              }\n            >\n              <i className=\"fas fa-home\"></i> Home\n            </NavLink>\n            {currentUser ? loggedInLinks : loggedOutLinks}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useCurrentUser } from \"../contexts/CurrentUserContext\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const currentUser = useCurrentUser();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        currentUser ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","// WelcomePage.js\n// Landing page for TaskPilot with intro, icons, and navigation buttons.\n\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  BsCheckCircle,\n  BsCalendarCheck,\n  BsClipboardCheck,\n} from \"react-icons/bs\";\nimport \"../../styles/WelcomePage.css\";\n\nfunction WelcomePage() {\n  return (\n    <div className=\"welcome-hero\">\n      {/* Main container with responsive width */}\n      <Container className=\"welcome-container\" fluid=\"sm\">\n        <Row className=\"justify-content-center\">\n          {/* Centered column with responsive sizing */}\n          <Col md={10} lg={8}>\n            {/* Card with shadow, no border, centered text */}\n            <Card className=\"text-center shadow-lg border-0 welcome-card\">\n              <Card.Body>\n                {/* Main title with emphasis on app name */}\n                <Card.Title as=\"h1\" className=\"fw-bold\">\n                  Welcome to <span className=\"text-primary\">TaskPilot</span>\n                </Card.Title>\n\n                {/* Subtitle with muted styling */}\n                <Card.Subtitle className=\"mb-3 text-muted\">\n                  Chart your course. Navigate your goals.\n                </Card.Subtitle>\n\n                {/* Icon row with Bootstrap 4 spacing */}\n                <div className=\"icon-row d-flex justify-content-center\">\n                  <BsClipboardCheck size={40} className=\"text-success mr-3\" />\n                  <BsCalendarCheck size={40} className=\"text-warning mr-3\" />\n                  <BsCheckCircle size={40} className=\"text-primary\" />\n                </div>\n\n                {/* Informational text with emphasis */}\n                <Card.Text className=\"mb-4\">\n                  Your productivity co-pilot is here.{\" \"}\n                  <span className=\"text-primary fw-bold\">TaskPilot</span> makes it easy to plan, prioritize,\n                  and complete your tasks with confidence. Whether you're\n                  tackling daily to-dos or long-term goals, we're here to help\n                  you stay organized—every step of the way.\n                </Card.Text>\n\n                {/* Buttons for signup and signin routes */}\n                <div className=\"button-group\">\n                  <Link to=\"/signup\">\n                    <Button variant=\"success\" size=\"lg\">\n                      Get Started\n                    </Button>\n                  </Link>\n                  <Link to=\"/signin\">\n                    <Button variant=\"outline-primary\" size=\"lg\">\n                      Sign In\n                    </Button>\n                  </Link>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default WelcomePage;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  FaClipboardList,\n  FaRegStickyNote,\n  FaEnvelope,\n} from 'react-icons/fa';\nimport styles from '../../styles/Dashboard.module.css';\nimport { axiosReq } from '../../api/axiosDefaults';\n\n/**\n * Dashboard component - displays quick stats and navigation links\n * for user productivity tools like tasks, notes, completed items, and contact.\n */\nfunction Dashboard() {\n  const [tasksCount, setTasksCount] = useState(0);\n  const [notesCount, setNotesCount] = useState(0);\n\n  useEffect(() => {\n    const fetchCounts = async () => {\n      try {\n        // Fetch all tasks and count length\n        const tasksRes = await axiosReq.get('/api/tasks/');\n        setTasksCount(Array.isArray(tasksRes.data) ? tasksRes.data.length : (tasksRes.data.results?.length ?? 0));\n\n        // Fetch all notes and count length\n        const notesRes = await axiosReq.get('/api/notes/');\n        setNotesCount(Array.isArray(notesRes.data) ? notesRes.data.length : (notesRes.data.results?.length ?? 0));\n      } catch (error) {\n        console.error('Failed to fetch dashboard data:', error);\n      }\n    };\n\n    fetchCounts();\n  }, []);\n\n  return (\n    <main className={styles.dashboardWrapper}>\n      {/* Header Section */}\n      <header className={styles.dashboardHeader}>\n        <h1 className={styles.title}>Dashboard Overview</h1>\n        <p className={styles.subtitle}>\n          View your productivity insights and quickly jump into tasks or notes.\n        </p>\n      </header>\n\n      {/* Stats Section */}\n      <section className={styles.statsSection}>\n        {/* Pending Tasks Card */}\n        <Link to=\"/tasks\" className={styles.statCard}>\n          <div className={styles.icon}>\n            <FaClipboardList size={32} />\n          </div>\n          <div>\n            <h2>Tasks</h2>\n            <p>{tasksCount} Task{tasksCount !== 1 ? 's' : ''}</p>\n          </div>\n        </Link>\n\n        {/* Saved Notes Card */}\n        <Link to=\"/notes\" className={styles.statCard}>\n          <div className={styles.icon}>\n            <FaRegStickyNote size={32} />\n          </div>\n          <div>\n            <h2>Notes</h2>\n            <p>{notesCount} Note{notesCount !== 1 ? 's' : ''}</p>\n          </div>\n        </Link>\n\n        {/* Contact Support Card */}\n        <Link to=\"/contact\" className={styles.statCard}>\n          <div className={styles.icon}>\n            <FaEnvelope size={32} />\n          </div>\n          <div>\n            <h2>Contact Us</h2>\n            <p>Need help? Reach out</p>\n          </div>\n        </Link>\n      </section>\n\n      {/* Quick Actions Panel */}\n      <section className={styles.actionsPanel}>\n        <h3>Quick Actions</h3>\n        <div className={styles.buttonGroup}>\n          <Link to=\"/tasks/create\" className={styles.primaryBtn}>\n            + Create Task\n          </Link>\n          <Link to=\"/notes/create\" className={styles.secondaryBtn}>\n            + Add Note\n          </Link>\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default Dashboard;","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Form,\n  Button,\n  Image,\n  Col,\n  Row,\n  Container,\n  Alert,\n} from \"react-bootstrap\";\nimport { axiosReq } from '../../api/axiosDefaults';\n\n// Styles\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\n\n// Reusable form input\nconst SignUpForm = () => {\n  // Form data state\n  const [signUpData, setSignUpData] = useState({\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n\n  // Destructure for easy use\n  const { username, email, password1, password2 } = signUpData;\n\n  // Errors from backend response\n  const [errors, setErrors] = useState({});\n\n  // Navigation after successful sign-up\n  const history = useHistory();\n\n  // Update form data on input change\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Submit handler: send data to backend and redirect on success\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosReq.post(\"/api/dj-rest-auth/registration/\", signUpData);\n      history.push(\"/signin\");\n    } catch (err) {\n      // Capture and display backend errors\n      setErrors(err.response?.data || {});\n    }\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className=\"my-auto py-4 px-3 px-md-5\" md={6}>\n        <Container className={`${appStyles.Content} p-4`}>\n          <h1 className={`${styles.Header} text-uppercase text-center`}>\n            Create your TaskPilot account\n          </h1>\n          <p className=\"text-muted text-center mb-4\" style={{ fontSize: \"0.95rem\" }}>\n            One step closer to mastering your tasks.\n          </p>\n\n          <Form onSubmit={handleSubmit}>\n            {/* Username */}\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"sr-only\">Username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"text\"\n                placeholder=\"Choose a username\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">{msg}</Alert>\n            ))}\n\n            {/* Email */}\n            <Form.Group controlId=\"email\">\n              <Form.Label className=\"sr-only\">Email address</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.email?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">{msg}</Alert>\n            ))}\n\n            {/* Password */}\n            <Form.Group controlId=\"password1\">\n              <Form.Label className=\"sr-only\">Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Create a password\"\n                name=\"password1\"\n                value={password1}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">{msg}</Alert>\n            ))}\n\n            {/* Confirm Password */}\n            <Form.Group controlId=\"password2\">\n              <Form.Label className=\"sr-only\">Confirm Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Confirm your password\"\n                name=\"password2\"\n                value={password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password2?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">{msg}</Alert>\n            ))}\n\n            {/* Non-field errors */}\n            {errors.non_field_errors?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">{msg}</Alert>\n            ))}\n\n            {/* Submit Button */}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright} fs-5`}\n              type=\"submit\"\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Container>\n\n        <Container className={`mt-3 ${appStyles.Content} text-center`}>\n          <Link className={styles.Link} to=\"/signin\">\n            Already have an account? <span>Sign in here!</span>\n          </Link>\n        </Container>\n      </Col>\n\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignUpCol}`}\n      >\n        <Image\n          className={appStyles.FillerImage}\n          src=\"https://images.unsplash.com/photo-1554415707-6e8cfc93fe23?fit=crop&w=900&q=80\"\n          alt=\"Organized desk with productivity tools\"\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignUpForm;","import React, { useState } from \"react\";\nimport {\n  Form,\n  Alert,\n  Button,\n  Col,\n  Row,\n  Image,\n  Container,\n} from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { axiosReq } from '../../api/axiosDefaults';\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\n\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n\n  const [signInData, setSignInData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // Destructure username and password from state for easier access\n  const { username, password } = signInData;\n\n  // Errors and success message states\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // For navigation after successful login\n  const history = useHistory();\n\n  // Update form input values\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await axiosReq.post(\"/api/dj-rest-auth/login/\", signInData);\n\n      setCurrentUser(data.user);\n\n      setSuccessMessage(\"Login successful! Redirecting...\");\n      setErrors({});\n\n      // Delay navigation slightly to let the user see the message\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1500);\n    } catch (err) {\n      setErrors(err.response?.data || {});\n      setSuccessMessage(\"\"); // Clear previous success message if any\n    }\n  };\n\n  return (\n    <Row className={styles.Row}>\n      {/* Left column: sign-in form */}\n      <Col className=\"my-auto p-0 p-md-2\" md={6}>\n        <Container className={`${appStyles.Content} p-4`}>\n          {/* Heading */}\n          <h1 className={`${styles.Header} text-uppercase text-center`}>\n            Welcome back\n          </h1>\n          {/* Subtitle */}\n          <p\n            className=\"text-muted text-center mb-4\"\n            style={{ fontSize: \"0.95rem\" }}\n          >\n            Log in and start organizing your day!\n          </p>\n\n          {/* Success Alert */}\n          {successMessage && (\n            <Alert variant=\"success\" className=\"text-center\">\n              {successMessage}\n            </Alert>\n          )}\n\n          {/* Sign-in form */}\n          <Form onSubmit={handleSubmit}>\n            {/* Username input */}\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"sr-only\">Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n                className={styles.Input}\n              />\n            </Form.Group>\n            {/* Show username errors */}\n            {errors.username?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {msg}\n              </Alert>\n            ))}\n\n            {/* Password input */}\n            <Form.Group controlId=\"password\">\n              <Form.Label className=\"sr-only\">Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                className={styles.Input}\n              />\n            </Form.Group>\n            {/* Show password errors */}\n            {errors.password?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {msg}\n              </Alert>\n            ))}\n\n            {/* Display any non-field errors (e.g., invalid login) */}\n            {errors.non_field_errors?.map((msg, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {msg}\n              </Alert>\n            ))}\n\n            {/* Submit button */}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright} fs-5`}\n              type=\"submit\"\n            >\n              Sign In\n            </Button>\n          </Form>\n        </Container>\n\n        {/* Link to sign-up page */}\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to=\"/signup\">\n            Don't have an account? <span>Sign up now!</span>\n          </Link>\n        </Container>\n      </Col>\n\n      {/* Right column: image, hidden on small screens */}\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignInCol}`}\n      >\n        <Image\n          className={`${appStyles.FillerImage}`}\n          src=\"https://plus.unsplash.com/premium_photo-1661382468438-c0ae70862f9b?q=80&w=3059&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n          alt=\"Motivational workspace\"\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default SignInForm;","import { Link } from \"react-router-dom\";\nimport { Card, Form, Badge, Button, Col } from \"react-bootstrap\";\nimport styles from \"../../styles/TaskList.module.css\";\n\nfunction TaskCard({ task, updateState, deleteTask }) {\n  // Mapping of task states to user-friendly labels\n  const STATE_LABELS = {\n    open: \"Open\",\n    in_progress: \"In Progress\",\n    done: \"Done\",\n  };\n\n  return (\n    // Bootstrap column wrapper for responsive layout\n    <Col md={6} lg={4} className=\"mb-4\">\n      <Card\n        // Conditional classes based on task state and priority for styling\n        className={`${styles.taskCard} ${\n          task.state === \"done\" ? styles.done : \"\"\n        } shadow-sm border-start ${\n          task.priority === \"high\"\n            ? \"border-danger\"\n            : task.priority === \"medium\"\n            ? \"border-warning\"\n            : \"border-success\"\n        }`}\n      >\n        <Card.Body className={styles.taskCardBody}>\n          {/* Task state selector */}\n          <div className={styles.taskState}>\n            <i className=\"fas fa-flag me-1 text-secondary\"></i>\n            <strong>State:</strong>\n            <Form.Control\n              as=\"select\"\n              value={task.state}\n              onChange={(e) => updateState(task, e.target.value)}\n              className=\"mb-2\"\n            >\n              {/* Render options for state selector */}\n              {Object.entries(STATE_LABELS).map(([value, label]) => (\n                <option key={value} value={value}>\n                  {label}\n                </option>\n              ))}\n            </Form.Control>\n          </div>\n\n          {/* Task title with link to details */}\n          <Link to={`/tasks/${task.id}`} className={styles.taskTitle}>\n            <i className=\"fas fa-tasks me-2 text-primary\"></i>\n            {task.title}\n          </Link>\n\n          {/* Task description */}\n          <Card.Text>{task.description}</Card.Text>\n\n          {/* Category display */}\n          <Card.Text>\n            <i className=\"fas fa-folder-open me-2 text-secondary\"></i>\n            <strong>Category:</strong> {task.category}\n          </Card.Text>\n\n          {/* Due date display */}\n          <Card.Text>\n            <i className=\"fas fa-calendar-alt me-2 text-secondary\"></i>\n            <strong>Due:</strong> {task.due_date}\n          </Card.Text>\n\n          {/* Priority badge */}\n          <Card.Text>\n            <i className=\"fas fa-bolt me-2 text-secondary\"></i>\n            <strong>Priority:</strong>{\" \"}\n            <Badge\n              bg={\n                task.priority === \"high\"\n                  ? \"danger\"\n                  : task.priority === \"medium\"\n                  ? \"warning\"\n                  : \"success\"\n              }\n            >\n              {task.priority}\n            </Badge>\n          </Card.Text>\n\n          {/* Footer with Edit and Delete buttons */}\n          <div className={styles.taskCardFooter}>\n            <Link to={`/tasks/${task.id}/edit`} className=\"btn btn-sm btn-outline-primary\">\n              <i className=\"fas fa-edit me-1\"></i>Edit\n            </Link>\n            <Button\n              variant=\"outline-danger\"\n              size=\"sm\"\n              onClick={() => deleteTask(task.id)}\n            >\n              <i className=\"fas fa-trash-alt me-1\"></i>Delete\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default TaskCard;","import { Card, Button, Badge, Col } from \"react-bootstrap\";\nimport styles from \"../../styles/TaskList.module.css\";\n\nfunction CompletedTaskCard({ task, deleteTask }) {\n  return (\n    <Col md={6} lg={4} className=\"mb-4\">\n      {/* Card container with styling */}\n      <Card className={`${styles.completedCard} shadow-sm`}>\n        <Card.Body>\n          {/* Title with completed icon */}\n          <Card.Title className={styles.completedCardTitle}>\n            <i className=\"fas fa-check-double me-2 text-success\"></i>\n            {task.title}\n          </Card.Title>\n\n          {/* Task description */}\n          <Card.Text>{task.description}</Card.Text>\n\n          {/* Task category with icon */}\n          <Card.Text>\n            <i className=\"fas fa-folder-open me-2 text-secondary\"></i>\n            <strong>Category:</strong> {task.category}\n          </Card.Text>\n\n          {/* Completion date with icon */}\n          <Card.Text>\n            <i className=\"fas fa-calendar-check me-2 text-secondary\"></i>\n            <strong>Completed:</strong> {task.due_date}\n          </Card.Text>\n\n          {/* Priority badge with icon */}\n          <Card.Text>\n            <i className=\"fas fa-star me-2 text-warning\"></i>\n            <strong>Priority:</strong>{\" \"}\n            <Badge\n              bg={\n                task.priority === \"high\"\n                  ? \"danger\"\n                  : task.priority === \"medium\"\n                  ? \"warning\"\n                  : \"success\"\n              }\n            >\n              {task.priority}\n            </Badge>\n          </Card.Text>\n\n          {/* Delete button */}\n          <div className={styles.completedCardFooter}>\n            <Button\n              size=\"sm\"\n              variant=\"outline-danger\"\n              onClick={() => deleteTask(task.id)}\n            >\n              <i className=\"fas fa-trash-alt me-1\"></i>Delete\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default CompletedTaskCard;","import { Button, ButtonGroup } from \"react-bootstrap\";\n\nfunction PaginationControls({ total, currentPage, setCurrentPage, tasksPerPage }) {\n  // Calculate total number of pages based on total items and items per page\n  const totalPages = Math.ceil(total / tasksPerPage);\n\n  // Don't render pagination if only one or no pages\n  if (totalPages <= 1) return null;\n\n  return (\n    // Wrapper div to center the pagination buttons with some vertical margin\n    <div className=\"d-flex justify-content-center my-3\">\n      <ButtonGroup>\n        {/* Generate a button for each page */}\n        {[...Array(totalPages).keys()].map((num) => (\n          <Button\n            key={num}\n            // Highlight current page button\n            variant={currentPage === num + 1 ? \"primary\" : \"outline-primary\"}\n            // Set the current page on click\n            onClick={() => setCurrentPage(num + 1)}\n          >\n            {num + 1}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default PaginationControls;","import { Button, ButtonGroup } from \"react-bootstrap\";\n\nfunction TaskCategoryFilter({ categories, selectedCategory, setSelectedCategory }) {\n  return (\n    // ButtonGroup container with spacing and wrapping\n    <ButtonGroup className=\"mb-4 d-flex flex-wrap justify-content-center\">\n      {/* Render a button for each category */}\n      {categories.map((cat) => (\n        <Button\n          key={cat}\n          // Highlight the button if it is the selected category\n          variant={cat === selectedCategory ? \"primary\" : \"outline-primary\"}\n          onClick={() => setSelectedCategory(cat)}\n          className=\"m-1\" // margin for spacing between buttons\n        >\n          <i className=\"fas fa-tag me-1\"></i> {/* Icon before category text */}\n          {cat.charAt(0).toUpperCase() + cat.slice(1)} {/* Capitalize category */}\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n}\n\nexport default TaskCategoryFilter;","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Dropdown,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport TaskCard from \"../../components/tasks/TaskCard\";\nimport CompletedTaskCard from \"../../components/tasks/CompletedTaskCard\";\nimport PaginationControls from \"../../components/tasks/PaginationControls\";\nimport TaskCategoryFilter from \"../../components/tasks/TaskCategoryFilter\";\nimport { useTasks } from \"../../hooks/useTasks\";\n\nimport styles from \"../../styles/TaskList.module.css\";\n\nfunction TaskList() {\n  const {\n    tasks,\n    categories,\n    deleteTask,\n    updateTaskState,\n    filterAndSortTasks,\n    groupTasks,\n  } = useTasks();\n\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"due_date\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const tasksPerPage = 6;\n\n  const filteredTasks = filterAndSortTasks({ selectedCategory, searchTerm, sortBy });\n  const completedTasks = filteredTasks.filter((t) => t.state === \"done\");\n  const activeTasks = filteredTasks.filter((t) => t.state !== \"done\");\n  const { todayTasks, weekTasks, laterTasks } = groupTasks(activeTasks);\n\n  const paginate = (items) => {\n    const start = (currentPage - 1) * tasksPerPage;\n    return items.slice(start, start + tasksPerPage);\n  };\n\n  const progress =\n    tasks.length > 0\n      ? Math.round(\n          (tasks.filter((t) => t.state === \"done\").length / tasks.length) * 100\n        )\n      : 0;\n\n  return (\n    <Container>\n      <h2 className=\"my-4 text-center\">\n        <i className=\"fas fa-clipboard-list me-2\"></i>Your Tasks\n      </h2>\n\n      <div className={styles.progressWrapper}>\n        <ProgressBar now={progress} label={`${progress}% Complete`} />\n      </div>\n\n      <div className=\"text-end mb-3\">\n        <Link to=\"/tasks/create\" className=\"btn btn-success\">\n          <i className=\"fas fa-plus-circle me-1\"></i> New Task\n        </Link>\n      </div>\n\n      {/* Filters */}\n      <Row className=\"mb-3 align-items-center g-2\">\n        <Col md={8}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"🔍 Search tasks...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </Col>\n        <Col md={4}>\n          <Dropdown onSelect={(val) => setSortBy(val)}>\n            <Dropdown.Toggle variant=\"secondary\" className=\"w-100\">\n              <i className=\"fas fa-sort me-1\"></i>\n              Sort by: {sortBy === \"due_date\" ? \"Due Date\" : \"Priority\"}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item eventKey=\"due_date\">Due Date</Dropdown.Item>\n              <Dropdown.Item eventKey=\"priority\">Priority</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n\n      {/* Category Filter */}\n      <TaskCategoryFilter\n        categories={categories}\n        selectedCategory={selectedCategory}\n        setSelectedCategory={setSelectedCategory}\n      />\n\n      {/* Task Sections */}\n      {[\n        { title: \"Today\", icon: \"calendar-day\", color: \"info\", tasks: todayTasks },\n        { title: \"This Week\", icon: \"calendar-week\", color: \"warning\", tasks: weekTasks },\n        { title: \"Later\", icon: \"calendar-plus\", color: \"secondary\", tasks: laterTasks },\n      ].map(({ title, icon, color, tasks }) => (\n        <section key={title}>\n          <h4 className={`mt-4 ${styles.sectionTitle}`}>\n            <i className={`fas fa-${icon} me-2 text-${color}`}></i>\n            {title}\n          </h4>\n          <Row>\n            {paginate(tasks).length\n              ? paginate(tasks).map((task) => (\n                  <TaskCard\n                    key={task.id}\n                    task={task}\n                    updateState={updateTaskState}\n                    deleteTask={deleteTask}\n                  />\n                ))\n              : <p>No tasks due {title.toLowerCase()}.</p>}\n          </Row>\n          <PaginationControls\n            total={tasks.length}\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n            tasksPerPage={tasksPerPage}\n          />\n        </section>\n      ))}\n\n      {/* Completed Section */}\n      <section className={styles.completedSection}>\n        <h4 className={`mt-4 ${styles.sectionTitle}`}>\n          <i className=\"fas fa-check-circle me-2 text-success\"></i>Completed\n        </h4>\n        <Row>\n          {paginate(completedTasks).length\n            ? paginate(completedTasks).map((task) => (\n                <CompletedTaskCard key={task.id} task={task} deleteTask={deleteTask} />\n              ))\n            : <p>No completed tasks.</p>}\n        </Row>\n        <PaginationControls\n          total={completedTasks.length}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          tasksPerPage={tasksPerPage}\n        />\n      </section>\n    </Container>\n  );\n}\n\nexport default TaskList;","import { useEffect, useState } from \"react\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nexport const useTasks = () => {\n  // State to store all tasks fetched from the API\n  const [tasks, setTasks] = useState([]);\n  // State to store unique task categories including 'all'\n  const [categories, setCategories] = useState([]);\n\n  // Effect hook to fetch tasks on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // Fetch tasks data from API endpoint\n        const res = await axiosReq.get(\"/api/tasks/\");\n        const taskData = res.data.results;\n        // Save tasks into state\n        setTasks(taskData);\n        // Extract unique categories and add 'all' as default category\n        setCategories([\"all\", ...new Set(taskData.map((t) => t.category))]);\n      } catch (err) {\n        // Log any errors during fetching\n        console.error(\"Error fetching tasks:\", err);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Function to delete a task by id, with user confirmation\n  const deleteTask = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      try {\n        // Send delete request to API\n        await axiosReq.delete(`/api/tasks/${id}/`);\n        // Remove deleted task from local state\n        setTasks((prev) => prev.filter((t) => t.id !== id));\n      } catch (err) {\n        // Log errors during deletion\n        console.error(\"Error deleting task:\", err);\n      }\n    }\n  };\n\n  // Function to update a task's state (e.g., open, in_progress, done)\n  const updateTaskState = async (task, newState) => {\n    try {\n      // Convert due_date to ISO string for backend\n      const isoDueDate = new Date(task.due_date).toISOString();\n      // Send update request with new state\n      await axiosReq.put(`/api/tasks/${task.id}/`, {\n        ...task,\n        due_date: isoDueDate,\n        state: newState,\n      });\n      // Update task state locally\n      setTasks((prev) =>\n        prev.map((t) => (t.id === task.id ? { ...t, state: newState } : t))\n      );\n    } catch (err) {\n      // Log errors during update\n      console.error(\"Error updating task state:\", err);\n    }\n  };\n\n  // Function to filter and sort tasks based on category, search term, and sort option\n  const filterAndSortTasks = ({ selectedCategory, searchTerm, sortBy }) => {\n    return tasks\n      // Filter tasks by selected category unless 'all' is selected\n      .filter((task) =>\n        selectedCategory === \"all\" ? true : task.category === selectedCategory\n      )\n      // Filter tasks that include the search term in title or description\n      .filter((task) =>\n        `${task.title} ${task.description}`\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n      // Sort tasks by due date or priority\n      .sort((a, b) => {\n        if (sortBy === \"due_date\") {\n          return new Date(a.due_date) - new Date(b.due_date);\n        }\n        const priorityRank = { high: 1, medium: 2, low: 3 };\n        return priorityRank[a.priority] - priorityRank[b.priority];\n      });\n  };\n\n  // Function to group tasks into today, this week, and later based on due dates\n  const groupTasks = (taskList) => {\n    const today = new Date();\n    const endOfWeek = new Date();\n    endOfWeek.setDate(today.getDate() + 7);\n\n    const todayTasks = [];\n    const weekTasks = [];\n    const laterTasks = [];\n\n    // Categorize tasks based on due date\n    taskList.forEach((task) => {\n      const due = new Date(task.due_date);\n      if (due.toDateString() === today.toDateString()) {\n        todayTasks.push(task);\n      } else if (due <= endOfWeek) {\n        weekTasks.push(task);\n      } else {\n        laterTasks.push(task);\n      }\n    });\n\n    return { todayTasks, weekTasks, laterTasks };\n  };\n\n  // Return all states and functions to be used by components\n  return {\n    tasks,\n    setTasks,\n    categories,\n    deleteTask,\n    updateTaskState,\n    filterAndSortTasks,\n    groupTasks,\n  };\n};","import React from \"react\";\nimport { Form, Button, Dropdown } from \"react-bootstrap\";\n\n// Options for dropdown fields: priority, state, and category\nconst OPTIONS = {\n  PRIORITIES: [\n    { value: \"low\", label: \"Low\" },\n    { value: \"medium\", label: \"Medium\" },\n    { value: \"high\", label: \"High\" },\n  ],\n  STATES: [\n    { value: \"open\", label: \"Open\" },\n    { value: \"in_progress\", label: \"In Progress\" },\n    { value: \"done\", label: \"Done\" },\n    { value: \"overdue\", label: \"Overdue\" },\n  ],\n  CATEGORIES: [\n    { value: \"work\", label: \"Work\" },\n    { value: \"personal\", label: \"Personal\" },\n    { value: \"fitness\", label: \"Fitness\" },\n    { value: \"finance\", label: \"Finance\" },\n    { value: \"misc\", label: \"Miscellaneous\" },\n  ],\n};\n\n/**\n * DropdownSelector Component\n * Renders a label and a Bootstrap Dropdown for selecting one option.\n *\n * Props:\n * - label: The label text for the dropdown\n * - options: Array of {value, label} objects representing dropdown items\n * - selected: The currently selected value\n * - onSelect: Callback to handle selection changes\n * - controlId: HTML id for the Form.Group container (for accessibility)\n * - disabled: boolean to disable dropdown\n */\nconst DropdownSelector = ({\n  label,\n  options,\n  selected,\n  onSelect,\n  controlId,\n  disabled = false,\n}) => (\n  <Form.Group className=\"mb-3\" controlId={controlId}>\n    <Form.Label>{label}</Form.Label>\n    <Dropdown onSelect={disabled ? undefined : onSelect}>\n      <Dropdown.Toggle variant=\"secondary\" disabled={disabled}>\n        {/* Show label for selected option or \"Select\" if none */}\n        {options.find((o) => o.value === selected)?.label || \"Select\"}\n      </Dropdown.Toggle>\n      {!disabled && (\n        <Dropdown.Menu>\n          {/* Map options to Dropdown.Item components */}\n          {options.map(({ value, label }) => (\n            <Dropdown.Item key={value} eventKey={value}>\n              {label}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      )}\n    </Dropdown>\n  </Form.Group>\n);\n\n/**\n * TaskForm Component\n * Renders the full form to create or edit a task.\n *\n * Props:\n * - formData: Object holding form field values\n * - handleChange: Function to handle input changes (text/date)\n * - handleSelect: Function to handle dropdown selection changes\n * - handleSubmit: Function to handle form submission\n * - getMinDate: Function that returns minimum allowed due date (string in YYYY-MM-DD)\n * - isEditMode: Boolean flag, true if editing existing task\n * - readOnly: Boolean flag, true if form fields should be read-only\n */\nfunction TaskForm({\n  formData,\n  handleChange,\n  handleSelect,\n  handleSubmit,\n  getMinDate,\n  isEditMode,\n  readOnly = false,\n}) {\n  return (\n    <Form onSubmit={handleSubmit}>\n      {/* Title input */}\n      <Form.Group className=\"mb-3\" controlId=\"title\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"title\"\n          value={formData.title}\n          onChange={readOnly ? undefined : handleChange}\n          readOnly={readOnly}\n          required\n        />\n      </Form.Group>\n\n      {/* Description textarea */}\n      <Form.Group className=\"mb-3\" controlId=\"description\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          name=\"description\"\n          value={formData.description}\n          onChange={readOnly ? undefined : handleChange}\n          readOnly={readOnly}\n        />\n      </Form.Group>\n\n      {/* Due date input */}\n      <Form.Group className=\"mb-3\" controlId=\"due_date\">\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          name=\"due_date\"\n          value={formData.due_date || \"\"}\n          onChange={readOnly ? undefined : handleChange}\n          readOnly={readOnly}\n          min={getMinDate ? getMinDate() : new Date().toISOString().split(\"T\")[0]}\n          required\n        />\n      </Form.Group>\n\n      {/* Dropdown for Priority */}\n      <DropdownSelector\n        label=\"Priority\"\n        options={OPTIONS.PRIORITIES}\n        selected={formData.priority}\n        onSelect={readOnly ? undefined : (value) => handleSelect(\"priority\")(value)}\n        controlId=\"priority\"\n        disabled={readOnly}\n      />\n\n      {/* Dropdown for State */}\n      <DropdownSelector\n        label=\"State\"\n        options={OPTIONS.STATES}\n        selected={formData.state}\n        onSelect={readOnly ? undefined : (value) => handleSelect(\"state\")(value)}\n        controlId=\"state\"\n        disabled={readOnly}\n      />\n\n      {/* Dropdown for Category */}\n      <DropdownSelector\n        label=\"Category\"\n        options={OPTIONS.CATEGORIES}\n        selected={formData.category}\n        onSelect={readOnly ? undefined : (value) => handleSelect(\"category\")(value)}\n        controlId=\"category\"\n        disabled={readOnly}\n      />\n\n      {!readOnly && (\n        <Button variant=\"primary\" type=\"submit\">\n          {isEditMode ? \"Update Task\" : \"Create Task\"}\n        </Button>\n      )}\n    </Form>\n  );\n}\n\nexport default TaskForm;","import { useState } from \"react\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nconst useTaskForm = (taskId, history) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    due_date: \"\",\n    priority: \"medium\",\n    state: \"open\",\n    category: \"misc\",\n    notes: \"\",\n  });\n\n  const handleChange = ({ target: { name, value } }) =>\n    setFormData((prev) => ({ ...prev, [name]: value }));\n\n  const handleSelect = (field) => (eventKey) =>\n    setFormData((prev) => ({ ...prev, [field]: eventKey }));\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = {\n        ...formData,\n        due_date: formData.due_date ? new Date(formData.due_date).toISOString() : null,\n      };\n      await axiosReq.put(`/api/tasks/${taskId}/`, payload);\n      history.push(\"/tasks\");\n    } catch (err) {\n      alert(\"Failed to update task\");\n    }\n  };\n\n  const getMinDate = () => new Date().toISOString().slice(0, 10);\n\n  return {\n    formData,\n    setFormData,\n    handleChange,\n    handleSelect,\n    handleSubmit,\n    getMinDate,\n  };\n};\n\nexport default useTaskForm;","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport styles from \"../styles/NoteList.module.css\";\n\nfunction NoteCardForTask({ note }) {\n  return (\n    <Card className={styles.noteCard}>\n      <Card.Body>\n        <Card.Text>\n          <i className=\"fas fa-sticky-note me-2 text-primary\"></i>\n          {note.body}\n        </Card.Text>\n        <small className={styles.timestamp}>\n          <i className=\"fas fa-clock me-1\"></i>\n          {new Date(note.date_added || note.created_at).toLocaleString()}\n        </small>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default NoteCardForTask;","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport TaskForm from \"./TaskForm\";\nimport useTaskForm from \"../../hooks/useTaskForm\";\nimport NoteCardForTask from \"../../components/NoteCardForTask\";\n\nimport styles from \"../../styles/TaskDetail.module.css\";\n\nfunction TaskDetail() {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const { formData, setFormData, getMinDate } = useTaskForm(id, history);\n\n  const [notes, setNotes] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const fetchTask = useCallback(async () => {\n    try {\n      const { data } = await axiosReq.get(`/api/tasks/${id}/`);\n      setFormData({\n        title: data.title,\n        description: data.description,\n        due_date: new Date(data.due_date).toISOString().slice(0, 10),\n        priority: data.priority,\n        state: data.state,\n        category: data.category,\n        notes: \"\",\n      });\n      setNotes(data.notes || []); // if notes are included in task response\n    } catch (err) {\n      setError(\"Failed to load task.\");\n    }\n  }, [id, setFormData]);\n\n  // Fetch task data on component mount or when `id` changes\n  useEffect(() => {\n    fetchTask();\n  }, [fetchTask]);\n\n  const handleDelete = async () => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      try {\n        await axiosReq.delete(`/api/tasks/${id}/`);\n        history.push(\"/tasks\");\n      } catch (err) {\n        alert(\"Failed to delete task.\");\n      }\n    }\n  };\n\n  return (\n    <Container className=\"my-4\">\n      <h2 className={styles.taskTitle}>Task Detail</h2>\n\n      {error && <p className=\"text-danger\">{error}</p>}\n\n      <div className={styles.taskFormWrapper}>\n        <TaskForm formData={formData} readOnly getMinDate={getMinDate} />\n      </div>\n\n      <div className={`d-flex justify-content-end gap-2 mt-3 ${styles.buttonGroup}`}>\n        <Button variant=\"secondary\" onClick={() => history.push(\"/tasks\")}>\n          Back to Tasks\n        </Button>\n        <Button variant=\"primary\" onClick={() => history.push(`/tasks/${id}/edit`)}>\n          Edit Task\n        </Button>\n        <Button variant=\"danger\" onClick={handleDelete}>\n          Delete Task\n        </Button>\n      </div>\n\n      <h4 className=\"mt-5\">Notes</h4>\n      <div className={styles.notesSection}>\n        {notes.length === 0 ? (\n          <p className=\"text-muted\">No notes for this task.</p>\n        ) : (\n          <div className=\"d-flex flex-column gap-3\">\n            {notes.map((note) => (\n              <NoteCardForTask key={note.id} note={note} />\n            ))}\n          </div>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nexport default TaskDetail;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TaskForm from \"./TaskForm\";\n\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/TaskCreate.module.css\";\n\n// Custom hook for handling task creation logic\nconst useTaskCreateForm = (history) => {\n  // Initial form state\n  const [formData, setFormData] = React.useState({\n    title: \"\",\n    description: \"\",\n    due_date: \"\",\n    priority: \"medium\",\n    state: \"open\",\n    category: \"misc\",\n    notes: \"\",\n  });\n\n  // ----- Handle input changes for text and date fields -----\n  const handleChange = ({ target: { name, value } }) =>\n    setFormData((prev) => ({ ...prev, [name]: value }));\n\n  // ----- Handle dropdown selection changes -----\n  const handleSelect = (field) => (eventKey) =>\n    setFormData((prev) => ({ ...prev, [field]: eventKey }));\n\n  // Handles form submission (POST request to create new task)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = {\n        ...formData,\n        // Convert due_date to ISO string if it exists\n        due_date: formData.due_date ? new Date(formData.due_date).toISOString() : null,\n      };\n      await axiosReq.post(\"/api/tasks/\", payload);\n      history.push(\"/tasks\");\n    } catch (err) {\n      alert(\"Failed to create task\");\n    }\n  };\n\n  // Returns the minimum selectable date (today's date in YYYY-MM-DD format)\n  const getMinDate = () => new Date().toISOString().slice(0, 10);\n\n  // Return all utilities needed in the form\n  return {\n    formData,\n    setFormData,\n    handleChange,\n    handleSelect,\n    handleSubmit,\n    getMinDate,\n  };\n};\n\n\n// Component responsible for rendering the Create Task page\nfunction TaskCreate() {\n  const history = useHistory();\n\n\n  // Use custom hook to get form logic and state\n  const {\n    formData,\n    handleChange,\n    handleSelect,\n    handleSubmit,\n    getMinDate,\n  } = useTaskCreateForm(history);\n\n  return (\n    <div className={styles.taskCreateWrapper}>\n      <TaskForm\n        formData={formData}\n        handleChange={handleChange}\n        handleSelect={handleSelect}\n        handleSubmit={handleSubmit}\n        getMinDate={getMinDate}\n        isEditMode={false}\n      />\n    </div>\n  );\n}\n\nexport default TaskCreate;","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteConfirmModal = ({ show, onHide, onConfirm, error }) => (\n  <Modal show={show} onHide={onHide} centered>\n    <Modal.Header closeButton>\n      <Modal.Title>Confirm Delete</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      Are you sure you want to delete this item?\n      {error && <div className=\"text-danger mt-2\">{error}</div>}\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={onHide}>\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={onConfirm}>\n        Delete\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport default DeleteConfirmModal;","export function formatDateForInput(dateString) {\n  if (!dateString) return \"\"; // if null/undefined, return empty string\n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) return \"\"; // invalid date returns empty string\n\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n}\n\nexport const getMinDate = () => {\n  const d = new Date();\n  return d.toISOString().slice(0, 10);\n};","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Form, Button, ListGroup } from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport TaskForm from \"./TaskForm\";\nimport useTaskForm from \"../../hooks/useTaskForm\";\nimport DeleteConfirmModal from \"../../components/DeleteConfirmModal\";\nimport { formatDateForInput, getMinDate } from \"../../utils/dateUtils\";\n\nfunction TaskEdit() {\n  const { id } = useParams(); // Extract task ID from URL\n  const taskId = Number(id);\n  const history = useHistory();\n\n\n  // Custom hook to handle form logic (input state, change handlers, and submission)\n  const {\n    formData,\n    setFormData,\n    handleChange,\n    handleSelect,\n    handleSubmit,\n  } = useTaskForm(id, history);\n\n  // Notes state\n  const [notesList, setNotesList] = useState([]);\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const [editingNoteBody, setEditingNoteBody] = useState(\"\");\n\n  // Delete confirmation modal state\n  const [showModal, setShowModal] = useState(false);\n  const [noteToDelete, setNoteToDelete] = useState(null);\n  const [deleteError, setDeleteError] = useState(\"\");\n\n  // Fetch task details and notes\n  const fetchTask = useCallback(async () => {\n    try {\n      const { data } = await axiosReq.get(`/api/tasks/${id}/`);\n      setFormData({\n        title: data.title,\n        description: data.description,\n        due_date: formatDateForInput(data.due_date),\n        priority: data.priority,\n        state: data.state,\n        category: data.category,\n        notes: \"\",\n      });\n      setNotesList(data.notes || []);\n    } catch (err) {\n      alert(\"Failed to fetch task and notes\");\n    }\n  }, [id, setFormData]);\n\n  useEffect(() => {\n    fetchTask();\n  }, [fetchTask]);\n\n  // Add a new note\n  const handleAddNote = async () => {\n    const noteContent = formData.notes.trim();\n    if (!noteContent) return;\n\n    try {\n      const { data } = await axiosReq.post(\"/api/notes/\", {\n        task: taskId,\n        body: noteContent,\n      });\n      setNotesList((prev) => [...prev, data]);\n      setFormData((prev) => ({ ...prev, notes: \"\" }));\n    } catch (err) {\n      alert(\"Failed to add note\");\n    }\n  };\n\n  // Confirm delete note\n  const confirmDeleteNote = async () => {\n    try {\n      await axiosReq.delete(`/api/notes/${noteToDelete}/`);\n      setNotesList((prev) => prev.filter((note) => note.id !== noteToDelete));\n      setShowModal(false);\n      setNoteToDelete(null);\n    } catch (err) {\n      setDeleteError(\"Failed to delete note.\");\n      setShowModal(false);\n    }\n  };\n\n  // Start editing a note\n  const handleEditNote = (noteId, currentBody) => {\n    setEditingNoteId(noteId);\n    setEditingNoteBody(currentBody);\n  };\n\n  // Save updated note\n  const handleSaveNote = async () => {\n    try {\n      await axiosReq.put(`/api/notes/${editingNoteId}/`, {\n        task: taskId,\n        body: editingNoteBody,\n      });\n      setNotesList((prev) =>\n        prev.map((note) =>\n          note.id === editingNoteId ? { ...note, body: editingNoteBody } : note\n        )\n      );\n      setEditingNoteId(null);\n      setEditingNoteBody(\"\");\n    } catch {\n      alert(\"Failed to update note\");\n    }\n  };\n\n  return (\n    <Container className=\"my-4\">\n      <h2>Edit Task</h2>\n      <TaskForm\n        formData={formData}\n        handleChange={handleChange}\n        handleSelect={handleSelect}\n        handleSubmit={handleSubmit}\n        getMinDate={getMinDate}\n        isEditMode\n      />\n\n      <h4 className=\"mt-4\">Notes</h4>\n      <Form.Group className=\"mb-3\" controlId=\"notes\">\n        <Form.Label>Add a Note</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={2}\n          name=\"notes\"\n          value={formData.notes}\n          onChange={handleChange}\n        />\n        <Button className=\"mt-2\" onClick={handleAddNote}>\n          Add Note\n        </Button>\n      </Form.Group>\n\n      <ListGroup>\n        {notesList.map((note) => (\n          <ListGroup.Item key={note.id}>\n            {editingNoteId === note.id ? (\n              <>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={2}\n                  value={editingNoteBody}\n                  onChange={(e) => setEditingNoteBody(e.target.value)}\n                />\n                <div className=\"mt-2 text-end\">\n                  <Button variant=\"success\" size=\"sm\" className=\"me-2\" onClick={handleSaveNote}>\n                    Save\n                  </Button>\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => setEditingNoteId(null)}>\n                    Cancel\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <>\n                <div>{note.body}</div>\n                <div className=\"text-end mt-2\">\n                  <Button\n                    variant=\"outline-primary\"\n                    size=\"sm\"\n                    className=\"me-2\"\n                    onClick={() => handleEditNote(note.id, note.body)}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"outline-danger\"\n                    size=\"sm\"\n                    onClick={() => {\n                      setNoteToDelete(note.id);\n                      setShowModal(true);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              </>\n            )}\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n\n      {/* Delete confirmation modal */}\n      <DeleteConfirmModal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        onConfirm={confirmDeleteNote}\n        error={deleteError}\n      />\n    </Container>\n  );\n}\n\nexport default TaskEdit;","import { useEffect, useState } from \"react\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nconst useNotesList = () => {\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchNotes = async () => {\n      try {\n        const res = await axiosReq.get(\"/api/notes/\");\n        const data = res.data.results || res.data;\n        if (isMounted) {\n          setNotes(data);\n          setLoading(false);\n          setError(null);\n        }\n      } catch {\n        if (isMounted) {\n          setError(\"Failed to load notes. Please try again later.\");\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchNotes();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  // Return setters so calling components can update state & errors\n  return { notes, setNotes, loading, error, setError };\n};\n\nexport default useNotesList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport styles from \"../styles/NoteList.module.css\";\n\nfunction NoteCard({ note }) {\n  return (\n    <Card className={styles.noteCard} role=\"article\" tabIndex=\"0\">\n      <Card.Body className=\"d-flex flex-column justify-content-between\">\n        <div>\n          <Card.Title className={styles.noteTitle}>\n            <i className=\"fas fa-sticky-note me-2 text-primary\"></i>\n            <Link to={`/notes/${note.id}`} className={styles.noteLink}>\n              {note.body.length > 80\n                ? note.body.substring(0, 80) + \"...\"\n                : note.body}\n            </Link>\n          </Card.Title>\n\n          <Card.Text className=\"text-muted d-flex align-items-center\">\n            <i className=\"fas fa-tasks me-2\"></i>\n            <Link to={`/tasks/${note.task.id}`} className={styles.taskLink}>\n              {note.task.title}\n            </Link>\n          </Card.Text>\n        </div>\n\n        <small className={styles.timestamp}>\n          <i className=\"fas fa-clock me-1\"></i>\n          {new Date(note.date_added).toLocaleString()}\n        </small>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default NoteCard;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Button,\n  Alert,\n  Row,\n  Col,\n  Spinner,\n} from \"react-bootstrap\";\nimport useNotesList from \"../../hooks/useNotesList\";\nimport styles from \"../../styles/NoteList.module.css\";\nimport NoteCard from \"../../components/NoteCard\";\n\nfunction NoteList() {\n  const { notes, loading, error } = useNotesList();\n\n  if (loading) {\n    return (\n      <Container className=\"text-center mt-5\">\n        <Spinner animation=\"border\" />\n        <p>Loading notes...</p>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className={styles.noteListContainer}>\n      {/* Header: Title + Add Note Button */}\n      <div className={styles.headerRow}>\n        <h2 className={styles.pageTitle}>\n          <i className=\"fas fa-sticky-note me-2\"></i>Notes\n        </h2>\n        <Button\n          className={styles.addNoteButton}\n          as={Link}\n          to=\"/notes/create\"\n          variant=\"primary\"\n        >\n          <i className=\"fas fa-plus me-2\"></i> Add Note\n        </Button>\n      </div>\n\n      {/* Error Alert */}\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n\n      {/* No notes fallback */}\n      {notes.length === 0 ? (\n        <p className={styles.noNotesText}>No notes found. Start by adding one!</p>\n      ) : (\n        <Row xs={1} sm={2} md={3} lg={4} className=\"g-4\">\n          {notes.map((note) => (\n            <Col key={note.id}>\n              <NoteCard note={note} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default NoteList;","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Container, Spinner, Card } from \"react-bootstrap\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/NoteDetail.module.css\";\n\nfunction NoteDetail() {\n  const { id } = useParams();\n  const [note, setNote] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchNote = async () => {\n      try {\n        const { data } = await axiosReq.get(`/api/notes/${id}/`);\n        setNote(data);\n      } catch (err) {\n        setError(\"Failed to fetch note.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNote();\n  }, [id]);\n\n  if (loading) {\n    return (\n      <Container className=\"text-center my-4\" aria-live=\"polite\">\n        <Spinner animation=\"border\" role=\"status\" aria-label=\"Loading note\" />\n        <p>Loading note...</p>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container className=\"my-4\" aria-live=\"polite\">\n        <p className=\"text-danger\">{error}</p>\n      </Container>\n    );\n  }\n\n  if (!note) {\n    return (\n      <Container className=\"my-4\">\n        <p>Note not found.</p>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className={styles.noteDetailWrapper}>\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            Note on:{\" \"}\n            {note.task ? (\n              <Link to={`/tasks/${note.task.id}`} aria-label={`Go to task: ${note.task.title}`}>\n                {note.task.title}\n              </Link>\n            ) : (\n              \"Unknown Task\"\n            )}\n          </Card.Title>\n          <Card.Text>{note.body}</Card.Text>\n          <hr />\n          <p>\n            <strong>Date Added:</strong>{\" \"}\n            {new Date(note.date_added).toLocaleString()}\n          </p>\n          <p>\n            <strong>Last Updated:</strong>{\" \"}\n            {new Date(note.date_updated).toLocaleString()}\n          </p>\n          <div className=\"d-flex justify-content-between\">\n            <Link to={`/notes/${id}/edit`} className=\"btn btn-primary\" aria-label=\"Edit this note\">\n              Edit Note\n            </Link>\n            <Link to={`/notes/${id}/delete`} className=\"btn btn-danger\" aria-label=\"Delete this note\">\n              Delete Note\n            </Link>\n          </div>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default NoteDetail;","import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nfunction NoteForm({\n  initialBody = \"\",\n  initialTask = \"\",\n  tasks = [],\n  onSubmit,\n  submitLabel = \"Submit\",\n}) {\n  // Local state for form inputs and error message\n  const [body, setBody] = useState(initialBody);\n  const [selectedTask, setSelectedTask] = useState(initialTask);\n  const [error, setError] = useState(null);\n\n  // Update local state when initial props change (useful for editing)\n  useEffect(() => {\n    setBody(initialBody);\n    setSelectedTask(initialTask);\n  }, [initialBody, initialTask]);\n\n  // Form submission handler with validation\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!selectedTask || !body) {\n      setError(\"Both fields are required.\");\n      return;\n    }\n    setError(null);\n    // Pass data up to parent component\n    onSubmit({ task: selectedTask, body });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      {/* Display validation error message */}\n      {error && <p className=\"text-danger\">{error}</p>}\n\n      {/* Task selection dropdown */}\n      <Form.Group controlId=\"task\" className=\"mb-3\">\n        <Form.Label>Task</Form.Label>\n        <Form.Control\n          as=\"select\"\n          value={selectedTask}\n          onChange={(e) => setSelectedTask(e.target.value)}\n          required\n        >\n          <option value=\"\">Select a task</option>\n          {tasks.map((task) => (\n            <option key={task.id} value={task.id}>\n              {task.title}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n\n      {/* Note body textarea */}\n      <Form.Group controlId=\"body\" className=\"mb-3\">\n        <Form.Label>Note Body</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={5}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n          required\n        />\n      </Form.Group>\n\n      {/* Submit button with customizable label */}\n      <Button type=\"submit\">{submitLabel}</Button>\n    </Form>\n  );\n}\n\nexport default NoteForm;","import { useState, useEffect } from \"react\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\nconst useNoteForm = (noteId = null) => {\n  // State for note body\n  const [body, setBody] = useState(\"\");\n  // State for selected task ID\n  const [selectedTask, setSelectedTask] = useState(\"\");\n  // State for available tasks list\n  const [tasks, setTasks] = useState([]);\n  // State for error messages\n  const [errors, setErrors] = useState(null);\n  // State for success message\n  const [successMessage, setSuccessMessage] = useState(null);\n  // Loading state\n  const [loading, setLoading] = useState(false);\n\n  // Load tasks on mount, select first task if no noteId provided\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const { data } = await axiosReq.get(\"/api/tasks/\");\n        setTasks(data.results);\n        if (!noteId && data.results.length > 0) {\n          setSelectedTask(data.results[0].id.toString());\n        }\n      } catch {\n        setErrors({ task: \"Failed to load tasks.\" });\n      }\n    };\n    fetchTasks();\n  }, [noteId]);\n\n  // Fetch note data for editing\n  useEffect(() => {\n    if (!noteId) return;\n    setLoading(true);\n    const fetchNote = async () => {\n      try {\n        const { data } = await axiosReq.get(`/api/notes/${noteId}/`);\n        setBody(data.body);\n        setSelectedTask(data.task.id.toString());\n        setErrors(null);\n      } catch {\n        setErrors({ fetch: \"Failed to load note.\" });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNote();\n  }, [noteId]);\n\n  // Clear success message after 2 seconds\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => setSuccessMessage(null), 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n\n  return {\n    body,\n    setBody,\n    selectedTask,\n    setSelectedTask,\n    tasks,\n    errors,\n    setErrors,\n    successMessage,\n    setSuccessMessage,\n    loading,\n  };\n};\n\nexport default useNoteForm;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport NoteForm from \"./NoteForm\";\nimport useNoteForm from \"../../hooks/useNoteForm\";\n\nfunction NoteCreate() {\n  const history = useHistory();\n\n  // Use the custom hook to get all form states and setters\n  const {\n    tasks,\n    errors,\n    setErrors,\n    successMessage,\n    setSuccessMessage,\n    loading,\n  } = useNoteForm();\n\n  // Submit handler for creating note\n  const handleCreate = async (formData) => {\n    try {\n      await axiosReq.post(\"/api/notes/\", formData);\n      setSuccessMessage(\"Note created successfully!\");\n      setErrors(null);\n      setTimeout(() => history.push(`/tasks/${formData.task}`), 1500);\n    } catch (err) {\n      setErrors({ submit: \"Failed to create note. Please try again.\" });\n      setSuccessMessage(null);\n      console.error(err.response?.data || err);\n    }\n  };\n\n  return (\n    <Container className=\"my-4\">\n      <h2>Add Note</h2>\n\n      {/* Show error or success outside the form as a fallback */}\n      {errors?.submit && <Alert variant=\"danger\">{errors.submit}</Alert>}\n      {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\n\n      <NoteForm\n        tasks={tasks}\n        onSubmit={handleCreate}\n        submitLabel=\"Add Note\"\n        error={errors?.form}\n        successMessage={successMessage}\n        loading={loading}\n      />\n    </Container>\n  );\n}\n\nexport default NoteCreate;","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport useNoteForm from \"../../hooks/useNoteForm\";\nimport NoteForm from \"./NoteForm\";\n\nfunction NoteEdit() {\n  const { id } = useParams(); // Get note ID from URL params\n  const history = useHistory(); // Navigation after submit\n\n  // Custom hook to manage form state, errors, and loading\n  const {\n    body,\n    selectedTask,\n    tasks,\n    errors,\n    setErrors,\n    loading,\n  } = useNoteForm(id);\n\n  // State to hold success message\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  /**\n   * Handles form submission\n   * @param {object} formData - Contains task and body fields\n   */\n  const handleSubmit = async ({ task, body }) => {\n    try {\n      await axiosReq.put(`/api/notes/${id}/`, { task, body });\n      setSuccessMessage(\"Note updated successfully!\");\n      setErrors(null);\n\n      // Redirect after showing success message briefly\n      setTimeout(() => history.push(`/tasks/${task}`), 1500);\n    } catch (err) {\n      setErrors({ body: \"Failed to update note.\" });\n      setSuccessMessage(null);\n      console.error(err.response?.data || err);\n    }\n  };\n\n  return (\n    <Container className=\"my-4\">\n      <h2>Edit Note</h2>\n\n      {/* Show error or success alerts */}\n      {errors && errors.body && <Alert variant=\"danger\">{errors.body}</Alert>}\n      {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\n\n      {/* NoteForm controlled with props from hook and handlers */}\n      <NoteForm\n        initialBody={body}\n        initialTask={selectedTask}\n        tasks={tasks}\n        errors={errors}\n        onSubmit={handleSubmit}\n        loading={loading}\n        successMessage={successMessage}\n        submitLabel=\"Update Note\"\n      />\n    </Container>\n  );\n}\n\nexport default NoteEdit;","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Container, Button, Alert } from \"react-bootstrap\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction NoteDelete() {\n  const { id } = useParams();\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [taskId, setTaskId] = useState(null);\n\n  useEffect(() => {\n    const fetchNote = async () => {\n      try {\n        const { data } = await axiosReq.get(`/api/notes/${id}/`);\n        setTaskId(data.task.id);\n      } catch (err) {\n        setError(\"Failed to load note.\");\n      }\n    };\n    fetchNote();\n  }, [id]);\n\n  const handleDelete = async () => {\n    try {\n      await axiosReq.delete(`/api/notes/${id}/`);\n      // Redirect to related task page if taskId available, else notes list\n      if (taskId) {\n        history.push(`/tasks/${taskId}`);\n      } else {\n        history.push(\"/notes\");\n      }\n    } catch (err) {\n      setError(\"Failed to delete note.\");\n    }\n  };\n\n  return (\n    <Container className=\"my-4\">\n      <h2>Delete Note</h2>\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      <p>Are you sure you want to delete this note?</p>\n      <Button variant=\"danger\" onClick={handleDelete} className=\"me-2\">\n        Delete\n      </Button>\n      <Button variant=\"secondary\" onClick={() => history.goBack()}>\n        Cancel\n      </Button>\n    </Container>\n  );\n}\n\nexport default NoteDelete;","import React, { useState } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/ContactForm.module.css\";\n\n// ContactForm component for sending messages to the backend\nfunction ContactForm() {\n  // State for form input values\n  const [formData, setFormData] = useState({\n    subject: \"\",\n    message: \"\",\n  });\n\n  // State for loading spinner and status messages\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  // Handle changes in form fields\n  const handleChange = (e) => {\n    setFormData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // Send POST request to contact endpoint\n      await axiosReq.post(\"/api/contact/\", formData);\n      setFormData({ subject: \"\", message: \"\" });\n      setSuccess(\"Message sent!\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to send message.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className={styles.contactContainer}>\n      <Row className=\"justify-content-center\">\n        <Col md={8} lg={6}>\n          {/* Page title */}\n          <h2 className={styles.contactTitle}>Get in Touch</h2>\n\n          {/* Success and error messages */}\n          {error && <div className={styles.errorMessage}>{error}</div>}\n          {success && <div className={styles.successMessage}>{success}</div>}\n\n          {/* Contact form */}\n          <Form onSubmit={handleSubmit}>\n            {/* Subject field */}\n            <Form.Group controlId=\"contactSubject\" className={styles.formGroup}>\n              <Form.Label>Subject</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"subject\"\n                value={formData.subject}\n                onChange={handleChange}\n                placeholder=\"Enter subject\"\n                required\n              />\n            </Form.Group>\n\n            {/* Message field */}\n            <Form.Group controlId=\"contactMessage\" className={`${styles.formGroup} mt-3`}>\n              <Form.Label>Message</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"message\"\n                rows={5}\n                value={formData.message}\n                onChange={handleChange}\n                placeholder=\"Write your message here...\"\n                required\n              />\n            </Form.Group>\n\n            {/* Submit button */}\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className={styles.submitButton}\n              disabled={loading}\n            >\n              {loading ? \"Sending...\" : \"Send Message\"}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ContactForm;","import { useEffect } from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport styles from \"./App.module.css\";\n\nimport NavBar from \"./components/NavBar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport { useCurrentUser } from \"./contexts/CurrentUserContext\";\nimport \"./api/axiosDefaults\";\n\n// Pages\nimport WelcomePage from \"./pages/home/WelcomePage\";\nimport Dashboard from \"./pages/home/Dashboard\";\nimport SignUpForm from \"./pages/auth/SignUpForm\";\nimport SignInForm from \"./pages/auth/SignInForm\";\n\n// Task Pages\nimport TaskList from \"./pages/tasks/TaskList\";\nimport TaskDetail from \"./pages/tasks/TaskDetail\";\nimport TaskCreate from \"./pages/tasks/TaskCreate.js\";\nimport TaskEdit from \"./pages/tasks/TaskEdit\";\n\n// Note Pages\nimport NoteList from \"./pages/notes/NoteList\";\nimport NoteDetail from \"./pages/notes/NoteDetail\";\nimport NoteCreate from \"./pages/notes/NoteCreate.js\";\nimport NoteEdit from \"./pages/notes/NoteEdit\";\nimport NoteDelete from \"./pages/notes/NoteDelete\";\n\n// Contact Page\nimport ContactForm from \"./pages/contact/ContactForm\";\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const location = useLocation();\n\n  const isWelcomePage = location.pathname === \"/\" && !currentUser;\n\n  useEffect(() => {\n    document.body.classList.toggle(\"no-scroll\", isWelcomePage);\n  }, [isWelcomePage]);\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n\n      {isWelcomePage ? (\n        <WelcomePage />\n      ) : (\n        <Container className={styles.Main}>\n          <Switch>\n            {/* Home / Dashboard */}\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n\n            {/* Tasks */}\n            <PrivateRoute exact path=\"/tasks\" component={TaskList} />\n            <PrivateRoute exact path=\"/tasks/create\" component={TaskCreate} />\n            <PrivateRoute exact path=\"/tasks/:id\" component={TaskDetail} />\n            <PrivateRoute exact path=\"/tasks/:id/edit\" component={TaskEdit} />\n\n            {/* Notes */}\n            <PrivateRoute exact path=\"/notes\" component={NoteList} />\n            <PrivateRoute exact path=\"/notes/create\" component={NoteCreate} />\n            <PrivateRoute exact path=\"/notes/:id\" component={NoteDetail} />\n            <PrivateRoute exact path=\"/notes/:id/edit\" component={NoteEdit} />\n            <PrivateRoute exact path=\"/notes/:id/delete\" component={NoteDelete} />\n\n            {/* Contact (submit only) */}\n            <PrivateRoute exact path=\"/contact\" component={ContactForm} />\n\n            {/* Auth */}\n            <Route exact path=\"/signin\" component={SignInForm} />\n            <Route exact path=\"/signup\" component={SignUpForm} />\n\n            {/* Fallback */}\n            <Route render={() => <p>Page not found!</p>} />\n          </Switch>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from \"./contexts/CurrentUserContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <CurrentUserProvider>\n        <App />\n      </CurrentUserProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"brand\":\"NavBar_brand__2HFCD\",\"brandText\":\"NavBar_brandText__2xHQK\",\"navLinks\":\"NavBar_navLinks__3K4gu\",\"navLink\":\"NavBar_navLink__BI2C_\",\"Active\":\"NavBar_Active__3PBZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressWrapper\":\"TaskList_progressWrapper__3ZXYN\",\"sectionTitle\":\"TaskList_sectionTitle__6lh3P\",\"completedSection\":\"TaskList_completedSection__2Ysmv\",\"taskCardFooter\":\"TaskList_taskCardFooter__LcXR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Container\":\"SignInUpForm_Container__2cuBp\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Link\":\"SignInUpForm_Link__1BeMm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"Dashboard_dashboardWrapper__3q2IY\",\"dashboardHeader\":\"Dashboard_dashboardHeader__35_nL\",\"title\":\"Dashboard_title__3N-_V\",\"subtitle\":\"Dashboard_subtitle__2LZzb\",\"statsSection\":\"Dashboard_statsSection__27CLu\",\"statCard\":\"Dashboard_statCard__2Ifjf\",\"icon\":\"Dashboard_icon__5qMpu\",\"actionsPanel\":\"Dashboard_actionsPanel__3Cx9n\",\"buttonGroup\":\"Dashboard_buttonGroup__2RJJt\",\"primaryBtn\":\"Dashboard_primaryBtn__2C5kK\",\"secondaryBtn\":\"Dashboard_secondaryBtn__zgkcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteListContainer\":\"NoteList_noteListContainer__8cxtl\",\"headerRow\":\"NoteList_headerRow__b76tV\",\"pageTitle\":\"NoteList_pageTitle__3UidE\",\"addNoteButton\":\"NoteList_addNoteButton__1Oevy\",\"noNotesText\":\"NoteList_noNotesText__kDnCA\",\"noteCard\":\"NoteList_noteCard__1mhK4\",\"noteTitle\":\"NoteList_noteTitle__8l0s_\",\"noteLink\":\"NoteList_noteLink__Lfjp4\",\"taskLink\":\"NoteList_taskLink__18Ihu\",\"timestamp\":\"NoteList_timestamp__2IUSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Main\":\"App_Main__HQkvd\",\"Content\":\"App_Content__ZaMNr\",\"Card\":\"App_Card__1lafX\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"FullImage\":\"App_FullImage__39jm0\",\"FittedImage\":\"App_FittedImage__1xlNt\",\"sr-only\":\"App_sr-only__NXiKO\",\"sr-accessible\":\"App_sr-accessible__2QVrI\",\"no-scroll\":\"App_no-scroll__12kh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"Blue\":\"Button_Blue__10GcT\",\"BlueOutline\":\"Button_BlueOutline__YqCWO\",\"Black\":\"Button_Black__2dCp7\",\"BlackOutline\":\"Button_BlackOutline__I-kZ-\",\"Bright\":\"Button_Bright__1MBHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactContainer\":\"ContactForm_contactContainer__2nlyc\",\"contactTitle\":\"ContactForm_contactTitle__1kjVK\",\"formGroup\":\"ContactForm_formGroup__34uR0\",\"submitButton\":\"ContactForm_submitButton__3nI4p\",\"successMessage\":\"ContactForm_successMessage__1iIH1\",\"errorMessage\":\"ContactForm_errorMessage__3o4ik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTitle\":\"TaskDetail_taskTitle__3z53_\",\"taskFormWrapper\":\"TaskDetail_taskFormWrapper__1bluJ\",\"notesSection\":\"TaskDetail_notesSection__3li8K\",\"buttonGroup\":\"TaskDetail_buttonGroup__14XiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskCreateWrapper\":\"TaskCreate_taskCreateWrapper__2QSGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteDetailWrapper\":\"NoteDetail_noteDetailWrapper__S8gHZ\",\"btn\":\"NoteDetail_btn__2hll4\"};"],"sourceRoot":""}